openapi: 3.0.2
info:
  title: Payment Initiation
  version: 1.69.0
  description: |
    $ref: ./markdown/PaymentIntroduction.md
  contact:
    name: Need help?
    url: https://developers.belvo.com
    email: support@belvo.com
servers:
  - url: https://api.belvo.com
    description: Production environment
security:
  - basicAuth: []
tags:
  - name: Payment Initiation introduction
    description: |
      # Introduction

      This is Belvo's Payment Initiation API - the easiest way to make payments in Latin America. Our solutions are designed to minimize the friction between your app and your customers, making payments effortless and secure. You can make payments in:

      # 🇧🇷 Brazil (OFPI)

      Belvo's Open Finance Payment Initiation (OFPI) in Brazil allows you to collect payments from your customers while optimizing their payment experience.

      - Check out our [OFPI guides](https://developers.belvo.com/docs/ofpi-prerequisites) and start collecting payments in Brazil.
      # 🇨🇴 Colombia (PSE)

      Belvo's Payment Initiation API makes use of Colombia's Pagos Seguros en Línea (PSE) system to make payments securely while also building upon PSE to optimize your user's experience.

      - Check out our [PSE guides](https://developers.belvo.com/docs/pse-prerequisites) and start collecting payments in Colombia.
  - name: Secret Keys
    description: |
      # Get your Payments API keys

      In order to use Belvo's Payments API, you need to first request your secret keys (see the code example below):


      ```curl
      POST https://api.belvo.com/payments/secret-keys/
      Authorization: Basic username:password
      ```

      Where:

      - `username` is the username you use to log in to the Belvo dashboard (in plain text).
      - `password` is the password you use to log in to the Belvo dashboard (in plain text).


      If you have entered your credentials correctly, you will receive a **201 Response** with your secret keys:


      ```json
      {
          "id": "Your Belvo secretID",
          "password": "Your Belvo secretPassword"
      }

      ```
  - name: Payment Webhooks
    description: |+
      Registering a webhook will let you know about any relevant updates that occur during the payment process. To set up a webhook, you need to make a [POST Register a new payment webhook](https://api.belvo.com/payments/webhooks/) request, providing some key details such as the name of the webhook and a URL where webhook events should be sent to.

  - name: Payment Institutions
    description: |
      A **payment institution** is an entity that Belvo can access information from. You can see a complete list of institutions available for payments by making a List request to this endpoint.
  - name: Customers
    description: |
      A **customer** is the payer that's going to push funds into your bank account. You need to create a customer in order to receive inflow payments to your organization's bank account.
  - name: Bank Accounts
    description: |
      To receive inflow payments to your organization's bank account, you must register the bank accounts (individual and business) using Belvo's Payments API.

      - **Individual** bank accounts must be created for each payer (your customer).
      - **Business** bank accounts need to be created for the beneficiary of the payment (your organization).
  - name: Payment Links
    description: |
      This is a Payment link.
  - name: Payment Intents
    description: |

      A **payment intent** is a single point of access to create payments using any payment method offered by Belvo.

      A payment intent captures all payment information (such as the amount to be charged, the description of the payment, the provider, and so on) and guides your customers through the payment flow.

      > **Note:** For institutions that require the `username_type` in the `form_fields` array, you must send through this value in your PATCH request.
  - name: Payment Transactions
    description: |
      Each time you receive an inflow payment from your customer, a **transaction** is created in the Belvo database.

      You can use the Payment Transactions resource in order to get useful information about a transaction as well as the specific charge associated with it.
paths:
  /payments/secret-keys/:
    post:
      tags:
        - Payment Secret Keys
      operationId: CreateSecretKeys
      summary: Request API keys
      description: |
        Request API keys to use with Belvo's Payments API.

        You will need to send through the username and password (in plain text) you use to login to the Belvo dashboard in the Authorization header.

        For example:

          ```curl
          POST https://api.belvo.com/payments/secret-keys/
          Authorization: Basic username:password
          ```
      parameters: []
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretKeys'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '408':
          description: Request Timeout Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/408RequestTimeoutError'
    get:
      tags:
        - Payment Secret Keys
      operationId: ListSecretKeys
      summary: List all secret keys
      description: |
        Get a paginated list of all existing secret keys in your Belvo account. We return up to 100 results per page.


          **Note**: We only return the ID of the secret keys.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretKeysPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/webhooks/:
    post:
      tags:
        - Payment Webhooks
      operationId: RegisterPaymentWebhook
      summary: Register a new payment webhook
      description: |
        Register a new payments webhook for your Belvo account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentWebhookRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/paymentWebhook'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '401':
          description: Authentication to Belvo API failed
          content:
            application/json:
              schema:
                type: array
                description: |
                  This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
                items:
                  $ref: '#/components/schemas/UnauthorizedError'
        '408':
          description: Request Timeout Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/408RequestTimeoutError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: array
                title: Unexpected Error
                description: |
                  This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
                    
                items:
                  $ref: '#/components/schemas/UnexpectedError'
    get:
      tags:
        - Payment Webhooks
      operationId: ListPaymentWebhooks
      summary: List all payment webhooks
      description: List all payment webhooks associated with your Belvo account.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsWebhooksPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/webhooks/{id}/:
    get:
      tags:
        - Payment Webhooks
      operationId: DetailPaymentWebhooks
      summary: Get details about a payment webhook
      description: Get the details about a specific payment webhook.
      parameters:
        - name: id
          required: true
          in: path
          description: The `webhook.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentWebhook'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
    delete:
      tags:
        - Payment Webhooks
      operationId: DeletePaymentWebhooks
      summary: Delete a payment webhook
      description: Delete a specific payment webhook from your Belvo account.
      parameters:
        - name: id
          in: path
          required: true
          description: The `webhook.id` that you want to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
        '401':
          description: Authentication to Belvo API failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /payments/institutions/:
    get:
      tags:
        - Payment Institutions
      operationId: ListPaymentInstitutions
      summary: List all payment institutions
      description: List all available payment institutions.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/country__in'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsInstitutionsPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/institutions/{id}/:
    get:
      tags:
        - Payment Institutions
      operationId: DetailPaymentInstitution
      summary: Get details about a payment institution
      description: Get the details about a specific payment institution
      parameters:
        - name: id
          required: true
          in: path
          description: The payment `institution.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentInstitution'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
  /payments/customers/:
    post:
      tags:
        - Customers
      operationId: CreateCustomer
      summary: Create a new customer
      description: Create a new customer to send or request funds.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateCustomerOfpi'
                - $ref: '#/components/schemas/CreateCustomerPse'
            examples:
              OfpiPixIndividual:
                $ref: '#/components/examples/CreateCustomerOfpiIndividual'
              OfpiPixBusiness:
                $ref: '#/components/examples/CreateCustomerOfpiBusiness'
              PseIndividual:
                $ref: '#/components/examples/CreateCustomerPseIndividual'
      responses:
        '201':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerOfpi'
                  - $ref: '#/components/schemas/CustomerPse'
              examples:
                OfpiPixIndividual:
                  $ref: '#/components/examples/ResponseCustomerOfpiIndividual'
                OfpiPixBusiness:
                  $ref: '#/components/examples/ResponseCustomerOfpiBusiness'
                PseIndividual:
                  $ref: '#/components/examples/ResponseCustomerPseIndividual'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/500UnexpectedError'
    get:
      tags:
        - Customers
      operationId: ListCustomers
      summary: List all customers
      description: List all customers associated with your Belvo account.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/id__in'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
        - $ref: '#/components/parameters/customer__type'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaginatedResponse'
              examples:
                OfpiPixIndividual:
                  $ref: '#/components/examples/ResponseCustomerOfpiIndividualPaginated'
                OfpiPixBusiness:
                  $ref: '#/components/examples/ResponseCustomerOfpiBusinessPaginated'
                PseIndividual:
                  $ref: '#/components/examples/ResponseCustomerPseIndividualPaginated'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/customers/{id}/:
    get:
      tags:
        - Customers
      operationId: DetailCustomer
      summary: Get details about a customer
      description: Get the details about a specific customer
      parameters:
        - name: id
          required: true
          in: path
          description: The `customer.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CustomerOfpi'
                  - $ref: '#/components/schemas/CustomerPse'
              examples:
                OfpiPixIndividual:
                  $ref: '#/components/examples/ResponseCustomerOfpiIndividual'
                OfpiPixBusiness:
                  $ref: '#/components/examples/ResponseCustomerOfpiBusiness'
                PseIndividual:
                  $ref: '#/components/examples/ResponseCustomerPseIndividual'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
  /payments/bank-accounts/:
    post:
      tags:
        - Bank Accounts
      operationId: CreateBankAccount
      summary: Create a new bank account
      description: Create a new bank account from which to send or request funds.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateBankAccountOfpi'
                - $ref: '#/components/schemas/CreateBankAccountPse'
            examples:
              OfpiBusinessPixInfo:
                $ref: '#/components/examples/CreateBankAccountBusinessPixInfo'
              OfpiIndividualPixInfo:
                $ref: '#/components/examples/CreateBankAccountIndividualPixInfo'
              PseInfo:
                $ref: '#/components/examples/CreateBankAccountBusinessPse'
      responses:
        '201':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BankAccountOfpiResponse'
                  - $ref: '#/components/schemas/BankAccountPseResponse'
              examples:
                OfpiPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPixInfo'
                OfpiIndividualPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountIndividualPixInfo'
                PseInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '408':
          description: Request Timeout Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/408RequestTimeoutError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/500UnexpectedError'
    get:
      tags:
        - Bank Accounts
      operationId: ListBankAccount
      summary: List all bank accounts
      description: List all bank accounts associated with your Belvo account.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/id__in'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
        - $ref: '#/components/parameters/number'
        - $ref: '#/components/parameters/number__in'
        - $ref: '#/components/parameters/customer'
        - $ref: '#/components/parameters/institution'
        - $ref: '#/components/parameters/holder__type'
        - $ref: '#/components/parameters/holder__type__in'
        - $ref: '#/components/parameters/providers'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountPaginatedResponse'
              examples:
                OfpiBusinessPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPixInfoPaginated'
                OfpiIndividualPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountIndividualPixInfoPaginated'
                PseInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPsePaginated'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/bank-accounts/{id}/:
    get:
      tags:
        - Bank Accounts
      operationId: DetailBankAccount
      summary: Get details about a bank account
      description: Get the details about a specific bank account
      parameters:
        - name: id
          required: true
          in: path
          description: The `bank-account.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BankAccountOfpiResponse'
                  - $ref: '#/components/schemas/BankAccountPseResponse'
              examples:
                OfpiPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPixInfo'
                OfpiIndividualPixInfo:
                  $ref: '#/components/examples/ResponseBankAccountIndividualPixInfo'
                PseInfo:
                  $ref: '#/components/examples/ResponseBankAccountBusinessPse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
  /payments/payment-links/:
    post:
      tags:
        - Payment Links
      operationId: CreatePaymentlink
      summary: Create a payment link
      description: Create a new payment link to start a hosted-widget payment.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreatePaymentLinkOfpi'
                - $ref: '#/components/schemas/CreatePaymentLinkPse'
      responses:
        '201':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentLinkOfpi'
                  - $ref: '#/components/schemas/PaymentLinkPse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '408':
          description: Request Timeout Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/408RequestTimeoutError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/500UnexpectedError'
    get:
      tags:
        - Payment Links
      operationId: ListPaymentLinks
      summary: List all payment links
      description: List all payment links associated with your Belvo account. By default, we return up to 100 results per page.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
        - $ref: '#/components/parameters/status_payment-links'
        - $ref: '#/components/parameters/ordering__payment-links'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/payment-links/{access_token}/:
    get:
      tags:
        - Payment Links
      operationId: DetailCreatePaymentlink
      summary: Get details about a payment link
      description: Get the details about a payment link.
      parameters:
        - name: access_token
          required: true
          in: path
          description: |
            The `access_token` of the payment link you want to get detailed information about. 


            **Note:** You can retrieve the `access_token` for a payment link by making a [GET List all payment links](https://developers.belvo.com/reference/listpaymentlinks) request.
          schema:
            type: string
            example: YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
      responses:
        '200':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentLinkOfpi'
                  - $ref: '#/components/schemas/PaymentLinkPse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
  /payments/payment-intents/:
    post:
      tags:
        - Payment Intents
      operationId: CreatePaymentIntent
      summary: Create a new payment intent
      description: Create a payment intent.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreatePaymentIntentPse'
      responses:
        '201':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentIntentPse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '408':
          description: Request Timeout Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/408RequestTimeoutError'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/500UnexpectedError'
    get:
      tags:
        - Payment Intents
      operationId: ListPaymentIntents
      summary: List all payment intents
      description: List all payment intents associated with your Belvo account.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/id__in'
        - $ref: '#/components/parameters/amount'
        - $ref: '#/components/parameters/amount__gt'
        - $ref: '#/components/parameters/amount__gte'
        - $ref: '#/components/parameters/amount__lt'
        - $ref: '#/components/parameters/amount__lte'
        - $ref: '#/components/parameters/amount__range'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
        - $ref: '#/components/parameters/customer'
        - $ref: '#/components/parameters/customer__in'
        - $ref: '#/components/parameters/ordering__payment-intents'
        - $ref: '#/components/parameters/provider'
        - $ref: '#/components/parameters/payment_method_type'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/status_payment-intents'
        - $ref: '#/components/parameters/status__in_payment-intents'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/updated_at__gt'
        - $ref: '#/components/parameters/updated_at__gte'
        - $ref: '#/components/parameters/updated_at__lt'
        - $ref: '#/components/parameters/updated_at__lte'
        - $ref: '#/components/parameters/updated_at__range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntentPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/payment-intents/{id}/:
    patch:
      tags:
        - Payment Intents
      operationId: PatchPaymentIntent
      summary: Complete a payment intent
      description: |
        Complete a new payment intent.


        During the payment intent flow, you need to fill in the payment intent with required information about your customer (their institution, bank account, and login credentials). This is done by sending PATCH requests with the information that Belvo asked you display in each `next_step` object. If you need more information on how to complete a payment intent, check our <a href="https://developers.belvo.com/docs/colombia-pse#payment-intents" target="_blank">PSE payment initiation</a> guides for  🇨🇴 Colombia.
      parameters:
        - name: id
          required: true
          in: path
          description: The `payment-intent.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPaymentIntentPse'
      responses:
        '200':
          description: OK (Created)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentIntentPse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/400ValidationError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
    get:
      tags:
        - Payment Intents
      operationId: DetailPaymentIntent
      summary: Get details about a payment intent
      description: Get the details about a specific payment intent.
      parameters:
        - name: id
          required: true
          in: path
          description: The `payment-intent.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentIntentPse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
  /payments/transactions/:
    get:
      tags:
        - Payment Transactions
      operationId: ListPaymentTransactions
      summary: List all payment transactions
      description: List all payment transactions associated with your Belvo account.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/id__in'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/created_at__gt'
        - $ref: '#/components/parameters/created_at__gte'
        - $ref: '#/components/parameters/created_at__lt'
        - $ref: '#/components/parameters/created_at__lte'
        - $ref: '#/components/parameters/created_at__range'
        - $ref: '#/components/parameters/charge'
        - $ref: '#/components/parameters/charge__in'
        - $ref: '#/components/parameters/beneficiary'
        - $ref: '#/components/parameters/beneficiary__in'
        - $ref: '#/components/parameters/payer'
        - $ref: '#/components/parameters/payer__in'
        - $ref: '#/components/parameters/customer'
        - $ref: '#/components/parameters/customer__in'
        - $ref: '#/components/parameters/payment_intent'
        - $ref: '#/components/parameters/payment_intent__in'
        - $ref: '#/components/parameters/transaction__type'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/amount'
        - $ref: '#/components/parameters/amount__gt'
        - $ref: '#/components/parameters/amount__gte'
        - $ref: '#/components/parameters/amount__lt'
        - $ref: '#/components/parameters/amount__lte'
        - $ref: '#/components/parameters/amount__range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsTransactionsPaginatedResponse'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
  /payments/transactions/{id}/:
    get:
      tags:
        - Payment Transactions
      operationId: DetailPaymentTransactions
      summary: Get details about a payment transaction
      description: Get the details about a specific payment transaction.
      parameters:
        - name: id
          required: true
          in: path
          description: The `transaction.id` you want to get detailed information about.
          schema:
            type: string
            format: uuid
            example: a3b92311-1888-449f-acaa-49ae28d68fcd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentTransaction'
        '401':
          description: Authentication Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/401UnauthorizedError'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/404NotFoundError'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: |
        # Using Basic Authentication

        Basic authentication is done using your secret keys. Just use your SecretID as the `username` and SecretPassword as the `password`. For example:

        ```curl
        curl \
            -u =BASE64-SECRET_ID=:=BASE64-SECRET_PASSWORD=
            https://sandbox.belvo.com/api/
        ```


        For information on how to get your secret keys, read our [Getting started guide](https://developers.belvo.com/docs/get-started-in-5-minutes).
  schemas:
    payments_common_pagination_properties:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: The total number of results in your Belvo account.
          example: 130
        next:
          type: string
          nullable: true
          format: url
          description: |
            The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is `null`.

            In our documentation example, we use `{endpoint}` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, `accounts` or `owners`).
          example: https://sandbox.belvo.com/api/{endpoint}/?page=2
        previous:
          type: string
          nullable: true
          format: url
          description: |
            The URL to the previous page of results. If there is no previous page, the
            value is `null`.
          example: null
    SecretKeys:
      type: object
      required:
        - id
        - password
        - created_at
        - last_used
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the Payments API `secretId`.
          example: fc6694b5-ced2-47db-8d14-f15c9e942f31
        password:
          type: string
          description: Your Payments API `secretPassword`. This value is obfuscated.
          example: '******'
        created_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the secret key was created.
          example: '2022-02-09T08:45:50.406032Z'
        last_used:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the secret key was last used. 
          example: '2022-02-09T08:45:50.406032Z'
    SecretKeysPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of secret keys objects.
              items:
                $ref: '#/components/schemas/SecretKeys'
    401UnauthorizedError:
      type: object
      title: Unauthorized Error
      description: |
        This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
      properties:
        code:
          type: string
          description: |
            A unique error code (`authentication_failed`) that allows you to classify and handle the error programmatically.
          example: authentication_failed
        message:
          type: string
          description: |
            A short description of the error.


            For `authentication_failed` errors, the description is:

              - `Invalid Secret Keys`.
          example: Invalid Secret Keys
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    400ValidationError:
      type: object
      title: Validation Error
      description: |
        This error occurs when the parameters provided did not match the expected fields or the item you are trying to create is already in our database, leading to a field validation errors.
      properties:
        code:
          type: string
          description: |
            A unique error code (`null`, `does_not_exist`, `required`, `already_registered`, `invalid_choice`, `max_length`, `min_length`, `blank`, `null`) that allows you to classify and handle the error programmatically.
          example: required
        message:
          type: string
          description: |
            A short description of the error.


            The description can be (among others):

              - `This field is required.`
              - `Object with name=narnia does not exist.`
              - `This field may not be null.`
              - `This field may not be blank.`
              - `This customer is already registered`
              - `Ensure this field has at least 2 characters.`
              - `Ensure this field has no more than 4 characters.`
              - `Entered value is not valid.`
              - `You must set all required fields: username, password, username_type.`
          example: This field is required.
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
        field:
          type: string
          nullable: true
          description: |
            Name of the field where the error was encountered.
          example: institution
    408RequestTimeoutError:
      type: object
      title: Request Timeout
      description: |
        Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.
      properties:
        code:
          type: string
          description: |
            A unique error code (`request_timeout`) that allows you to classify and handle the error programmatically.
          example: request_timeout
        message:
          type: string
          description: |
            A short description of the error.


            For `request_timeout` errors, the description is:

              - `The request timed out, you can retry asking for less data by changing your query parameters`.
          example: The request timed out, you can retry asking for less data by changing your query parameters
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    paymentWebhook:
      type: object
      required:
        - id
        - name
        - url
        - created_at
        - created_by
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the webhook.
          example: 32ab6809-6253-4fb0-be0f-94cce6ebb692
        name:
          title: string
          description: |
            The name you provided to identify the webhook.
          example: Your webhook name
        url:
          type: string
          description: |
            The URL where webhook events should be sent to.
          example: https://mycompany.com/security/webhook
        auth_header:
          type: string
          description: |
            The authentication header for the request. **Must** be set to `Authorization`.
          example: Authorization
        auth_token:
          type: string
          description: |
            The authentication token you need to send webhook events. This value is obfuscated.
          example: '*******'
        created_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the webhook was created in our database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: |
            Belvo's unique ID of the user that created the webhook.
          example: 38322582-7c76-4775-abe8-0fb2bdeb8204
    PaymentsWebhooksPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of webhook objects.
              items:
                $ref: '#/components/schemas/paymentWebhook'
    PaymentWebhookRequest:
      type: object
      required:
        - name
        - url
      properties:
        name:
          type: string
          description: |
            The name you want to provide to identify the webhook.
          example: Your webhook name
        url:
          type: string
          description: |
            The URL where webhook events should be sent to.
          example: https://mycompany.com/security/webhook
        auth_header:
          type: string
          description: |
            The authentication header for the request. **Must** be set to `Authorization`.
          example: Authorization
        auth_token:
          type: string
          description: |
            The authentication token you need to send webhook events. Can be either:


              - `Bearer` and a token (for Bearer authentication). 
              - `Basic` and a base64-encoded username:password string (for Basic authentication).
          example: Bearer hv7alD71j0dzXf09iKfg7u
    UnauthorizedError:
      type: object
      title: Unauthorized Error
      description: |
        This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).
      properties:
        code:
          type: string
          description: |
            A unique error code (`authentication_failed`) that allows you to classify and handle the error programmatically.


            ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#401-authentication_failed" target="_blank">401 authentication_failed errors</a>.
          example: authentication_failed
        message:
          type: string
          description: |
            A short description of the error. 


            For `authentication_failed` errors, the description is:

              - `Invalid Secret Keys`.
          example: Invalid Secret Keys
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    UnexpectedError:
      type: object
      title: Unexpected Error
      description: |
        This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
      properties:
        code:
          type: string
          description: |
            A unique error code (`unexpected_error`) that allows you to classify and handle the error programmatically.


            ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#500-unexpected_error" target="_blank">500 unexpected_error errors</a>.
          example: unexpected_error
        message:
          type: string
          description: |
            A short description of the error. 


            For `unexpected_error` errors, the description is:
              
              - `Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution`.
          example: Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    404NotFoundError:
      type: object
      title: Not Found
      properties:
        code:
          type: string
          description: |
            A unique error code (`not_found`) that allows you to classify and handle the error programmatically.
          example: not_found
        message:
          type: string
          description: |
            A short description of the error.


            For `not_found` errors, the description is:

              - `Not found`
          example: Not found
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    NotFoundError:
      type: object
      title: Not Found
      properties:
        code:
          type: string
          description: |
            A unique error code (`not_found`) that allows you to classify and handle the error programmatically.


            ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#404-not_found" target="_blank">404 not_found errors</a>.
          example: not_found
        message:
          type: string
          description: |
            A short description of the error. 


            For `not_found` errors, the description is:
              
              - `Not found`
          example: Not found
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    EnumPaymentsCountry:
      type: string
      enum:
        - BRA
        - COL
      maxLength: 3
      description: |
        The customer's country of residence.


        -  BRA (🇧🇷 Brazil)
        -  COL (🇨🇴 Colombia)
      example: COL
    InstitutionsFormFieldValues:
      type: object
      properties:
        code:
          type: string
          description: The code of the document.
          example: '001'
        label:
          type: string
          description: |
            The label for the field. For example:
            - Cédula de Ciudadanía
            - Cédula de Extranjería
            - Pasaporte
          example: Cédula de Ciudadanía
        validation:
          type: string
          description: The type of input validation used for the field.
          example: ^.{1,}$
        validation_message:
          type: string
          description: The message displayed when an invalid input is provided in the form field.
          example: Invalid document number
        placeholder:
          type: string
          description: The placeholder text in the form field.
          example: DEF4444908M22
    InstitutionFormField:
      type: object
      properties:
        name:
          type: string
          description: The username, password, or username type field.
          example: username
        type:
          type: string
          description: The input type for the form field. For example, string.
          example: text
        label:
          type: string
          description: |
            The label of the form field. For example:
            - Document
            - Clave
            - Token
          example: Document
        dependency:
          type: string
          nullable: true
          description: |
            Indicates whether or not this parameter depends on another parameter being provided. For example, if this field `dependency` = `username_type`, this means that you must also send through the `username_type` parameter.
          example: username_type
        validation:
          type: string
          description: The type of input validation used for the field.
          example: ^.{1,}$
        placeholder:
          type: string
          description: The placeholder text in the form field.
          example: Username
        validation_message:
          type: string
          description: The message displayed when an invalid input is provided in the form field.
          example: Invalid client number
        values:
          type: array
          description: |
            Array of additional form field values.
          items:
            $ref: '#/components/schemas/InstitutionsFormFieldValues'
        length:
          type: integer
          description: |
            Number of digits allowed when the type is `token`.
          example: 6
        optional:
          type: boolean
          description: |
            It indicates whether this form field is optional.
          example: false
    InstitutionFormFieldUsernameType:
      type: object
      properties:
        name:
          type: string
          description: The username, password, or username type field.
          example: username
        type:
          type: string
          description: The input type for the form field. For example, string.
          example: text
        placeholder:
          type: string
          description: The placeholder text in the form field.
          example: Username
        values:
          type: array
          description: |
            Array of additional form field values.
          items:
            $ref: '#/components/schemas/InstitutionsFormFieldValues'
        preselected:
          type: integer
          description: |
            Indicated which option from the `username_type`s array is automatically preselected for the user.
          example: 6
    paymentInstitution:
      type: object
      required:
        - id
        - active
        - name
        - display_name
        - legal_entity_name
        - website
        - logo
        - icon_logo
        - text_logo
        - primary_color
        - country
        - form_fields
        - sort_priority
        - description
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID to reference the institution.
          example: bbaceead-7b96-46d8-9354-38dec9707004
        active:
          type: boolean
          description: Indicates whether this institution is available for use or not.
          example: true
        name:
          type: string
          description: The name of the institution, as designated by Belvo.
          example: wakanda_national
        display_name:
          type: string
          description: The customer-facing name of the institution.
          example: Wakanda National Bank
        legal_entity_name:
          type: string
          nullable: true
          description: |
            The name of the legal entity of the institution, as registered with the relevant regulatory authority. Only applicable for 🇧🇷 Brazil OFPI.
          example: Wakanda Bank, National Association
        website:
          type: string
          description: The URL of the institution's website.
          example: https://www.wakandanational.com
        logo:
          type: string
          description: The URL of the institution's logo.
          example: https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_logo.png
        icon_logo:
          type: string
          description: The URL of the institution's icon logo.
          example: https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_icon_logo.png
        text_logo:
          type: string
          description: The URL of the institution's text logo.
          example: https://belvo-api-media.s3.amazonaws.com/logos/wakandanational_text_logo.png
        primary_color:
          type: string
          description: The primary color on the institution's website.
          example: '#fdbc24'
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        form_fields:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/InstitutionFormField'
              - $ref: '#/components/schemas/InstitutionFormFieldUsernameType'
        sort_priority:
          type: integer
          format: int32
          description: |
            Number that represents the order in which the institution should be displayed in an application, with `1` being the highest.
          example: 1
        description:
          type: string
          nullable: true
          description: A brief description of the insitution.
          example: 'Simple, transparent and secure: Wakanda Bank is the leading financial technology company in Latin America.'
    PaymentsInstitutionsPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of institution objects.
              items:
                $ref: '#/components/schemas/paymentInstitution'
    EnumCustomerType:
      type: string
      enum:
        - INDIVIDUAL
        - BUSINESS
      minLength: 8
      maxLength: 10
      description: |
        The type of customer. Can be either:

          - `INDIVIDUAL`
          - `BUSINESS`
            

        **Notes:** For 🇨🇴 Colombia's PSE, you can only create customers of type `INDIVIDUAL`.
      example: INDIVIDUAL
    EnumCustomerIdentifierTypeOfpi:
      type: string
      enum:
        - CPF
        - CNPJ
      maxLength: 64
      description: |
        The customer's ID document type.

        - 🇧🇷 Brazil options: `CPF` or `CNPJ`.
      example: CPF
    CustomerOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - id
        - created_at
        - created_by
        - customer_type
        - name
        - country
        - email
        - identifier
        - identifier_type
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current customer.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the customer.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer_type:
          $ref: '#/components/schemas/EnumCustomerType'
        name:
          type: string
          minLength: 5
          maxLength: 200
          description: |
            The full name of the customer.
          example: Caetano Veloso
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        email:
          type: string
          description: |
            The customer's email address.
          example: caetano.veloso@musicabrazil.br
        identifier:
          type: string
          description: |
            The document number of the customer's ID.
          example: 00.000.000/0001-91
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        address:
          type: string
          nullable: true
          minLength: 5
          maxLength: 150
          description: |
            The customers physical address.
          example: Rua de Caetano Veloso 432, 70200 Brasilia
        phone:
          type: string
          nullable: true
          description: |
            The customer's phone number.
          example: 3210-9876
    EnumCustomerIdentifierTypePse:
      type: string
      enum:
        - CC
        - PP
        - CE
        - TI
        - NIT
      maxLength: 64
      description: |
        The customer's ID document type.

        - 🇨🇴 Colombia options: `CC`, `PP`, `CE`, `TI`, or `NIT`.
      example: CC
    CustomerPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - id
        - created_at
        - created_by
        - customer_type
        - name
        - country
        - email
        - identifier
        - identifier_type
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current customer.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the customer.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer_type:
          $ref: '#/components/schemas/EnumCustomerType'
        name:
          type: string
          minLength: 5
          maxLength: 200
          description: |
            The full name of the customer.
          example: Carlos Vives
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        email:
          type: string
          description: |
            The customer's email address.
          example: carlos.vives@musicacolombia.co
        identifier:
          type: string
          description: |
            The document number of the customer's ID.
          example: '1018760936'
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypePse'
        address:
          type: string
          nullable: true
          minLength: 5
          maxLength: 150
          description: |
            The customers physical address.


            **Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
          example: Calle Carlos Vives 432, 80300 Bogota
        phone:
          type: string
          nullable: true
          description: |
            The customer's phone number.


            **Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
          example: 3210-9876
    CustomerPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of customer objects.
              items:
                oneOf:
                  - $ref: '#/components/schemas/CustomerOfpi'
                  - $ref: '#/components/schemas/CustomerPse'
    CreateCustomerOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - customer_type
        - name
        - country
        - email
        - identifier
        - identifier_type
      properties:
        customer_type:
          $ref: '#/components/schemas/EnumCustomerType'
        name:
          type: string
          minLength: 5
          maxLength: 200
          description: |
            The full name of the customer you want to create.
          example: Caetano Veloso
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        email:
          type: string
          description: |
            The customer's email address.
          example: caetano.veloso@musicabrazil.br
        identifier:
          type: string
          minLength: 1
          maxLength: 25
          description: |
            The document number of the customer's ID.
          example: '1018760936'
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        address:
          type: string
          nullable: true
          description: |
            The customer's physical address.
          example: Rua de Caetano Veloso 432, 70200 Brasilia
        phone:
          type: string
          nullable: true
          description: |
            The customer's phone number.
          example: 231.002.999-00
    CreateCustomerPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - customer_type
        - name
        - country
        - email
        - identifier
        - identifier_type
      properties:
        customer_type:
          $ref: '#/components/schemas/EnumCustomerType'
        name:
          type: string
          minLength: 5
          maxLength: 200
          description: |
            The full name of the customer you want to create.
          example: Carlos Vives
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        email:
          type: string
          description: |
            The customer's email address.
          example: carlos.vives@musicacolombia.co
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypePse'
        identifier:
          type: string
          minLength: 1
          maxLength: 15
          description: |
            The document number of the customer's ID.

            > **Note**: Depending on the `identifier_type`, you must follow these character restrictions.
            > 
            > For `PP`: Letter and number characters only.
            > For `CC`, `CE`, and `NIT`: Numbers, periods (`.`), and hyphen (`-`) characters only.
            >
            > If you send through an incorrect set of characters, you will receive a validation error.
          example: '1018760936'
        address:
          type: string
          nullable: true
          description: |
            The customer's physical address.
          example: Calle Carlos Vives 432, 80300 Bogota
        phone:
          type: string
          nullable: true
          description: |
            The customer's phone number.
          example: 3210-9876
    500UnexpectedError:
      type: object
      title: Unexpected Error
      description: |
        This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.
      properties:
        code:
          type: string
          description: |
            A unique error code (`unexpected_error`) that allows you to classify and handle the error programmatically.
          example: unexpected_error
        message:
          type: string
          description: |
            A short description of the error.


            For `unexpected_error` errors, the description is:

              - `Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution`.
          example: Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution
        request_id:
          type: string
          pattern: '[a-f0-9]{32}'
          description: |
            A 32-character unique ID of the request (matching a regex pattern of: `[a-f0-9]{32}`). Provide this ID when contacting the Belvo
            support team to accelerate investigations.
          example: 9e7b283c6efa449c9c028a16b5c249fb
    EnumBankAccountPixAccountTypeOfpi:
      type: string
      enum:
        - CHECKINGS
        - SAVINGS
        - SALARY
      description: |
        The type of bank account. Can be either:

          - `CHECKINGS`
          - `SAVINGS`
          - `SALARY`
      example: CHECKINGS
    BankAccountDetailsOfpi:
      type: object
      title: OFPI (PIX Account Information)
      required:
        - country
        - account_type
        - agency
        - number
      properties:
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        account_type:
          $ref: '#/components/schemas/EnumBankAccountPixAccountTypeOfpi'
        agency:
          type: string
          description: The agency (branch number) of the institution where the account was created.
          example: '0444'
        number:
          type: string
          pattern: ^[0-9]+$
          description: |
            The bank account number.

            **Note**: You can only send through numbers (`^[0-9]+$`) in the string. For example, `"457220"` is a valid bank account number, while "`45722-0`" is invalid as it contains a hyphen (`-`).
          example: '457220'
    EnumBankAccountHolderTypeOfpi:
      type: string
      enum:
        - INDIVIDUAL
        - BUSINESS
      description: The type of bank account. Can be either `INDIVIDUAL` or `BUSINESS`.
      example: BUSINESS
    HolderInformationBusinessOfpiResponse:
      type: object
      title: BUSINESS
      required:
        - name
        - identifier
        - identifier_type
      properties:
        name:
          type: string
          description: The bank account holder's first name.
          example: Caetano Veloso Entertainment Universe
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        identifier:
          type: string
          description: The document number of the company's ID.
          example: '23100299900'
    HolderInformationIndividualOfpiResponse:
      type: object
      title: INDIVIDUAL
      required:
        - first_name
        - last_name
        - identifier
        - identifier_type
      properties:
        first_name:
          type: string
          description: The bank account holder's first name.
          example: Dom
        last_name:
          type: string
          description: The bank account holder's last name.
          example: Mesa
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        identifier:
          type: string
          description: The document number of the customer's ID.
          example: '23100299900'
    HolderResponseOfpi:
      type: object
      title: OFPI
      required:
        - type
        - information
      description: Details regarding the bank account holder.
      properties:
        type:
          $ref: '#/components/schemas/EnumBankAccountHolderTypeOfpi'
        information:
          oneOf:
            - $ref: '#/components/schemas/HolderInformationBusinessOfpiResponse'
            - $ref: '#/components/schemas/HolderInformationIndividualOfpiResponse'
    BankAccountOfpiResponse:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - id
        - created_at
        - institution
        - created_by
        - holder
        - customer
        - details
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current bank account.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the bank account.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        customer:
          type: string
          nullable: true
          format: uuid
          description: |
            Belvo's unique ID for the customer associated with the bank account.

            For `BUSINESS` bank accounts, this field is `null`.
          example: null
        institution:
          type: string
          nullable: true
          format: uuid
          description: |
            Belvo's unique ID for the institution that the bank account is created in.

            For `BUSINESS` bank accounts that Belvo creates for organizations, this field is `null`.
          example: null
        details:
          oneOf:
            - $ref: '#/components/schemas/BankAccountDetailsOfpi'
        holder:
          $ref: '#/components/schemas/HolderResponseOfpi'
    EnumBankAccountHolderTypePse:
      type: string
      default: BUSINESS
      enum:
        - BUSINESS
      description: The type of bank account to create in Belvo. For business bank accounts, this field must the set to `BUSINESS`.
      example: BUSINESS
    HolderInformationBusinessPseResponse:
      type: object
      title: PSE
      required:
        - name
      properties:
        name:
          type: string
          description: |
            The business name. This value is obfuscated.


            Note, this is only applicable if the `holder.type` is set to `BUSINESS`.
          example: Tr******es
    HolderBusinessResponsePse:
      type: object
      title: Business
      required:
        - type
        - information
      description: Details regarding the business bank account holder.
      properties:
        type:
          $ref: '#/components/schemas/EnumBankAccountHolderTypePse'
        information:
          $ref: '#/components/schemas/HolderInformationBusinessPseResponse'
    PaymentsWay:
      type: object
      required:
        - terminal_id
        - form_id
      properties:
        terminal_id:
          type: integer
          format: int32
          description: |
            Your unique Payments Way terminal ID.


            **Note:** Belvo provides you with the Payments Way terminal ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂
          example: 123
        form_id:
          type: integer
          format: int32
          description: |
            Your unique Payments Way form ID.


            **Note:** Belvo provides you with the Payments Way form ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂
          example: 321
    ProvidersPse:
      type: object
      title: Payments Way
      properties:
        payments_way:
          $ref: '#/components/schemas/PaymentsWay'
    BankAccountBusinessPse:
      type: object
      title: Business Bank Account
      required:
        - id
        - created_at
        - created_by
        - number
        - customer
        - institution
        - holder
        - providers
        - details
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current bank account.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was first created in Belvo's database.
          example: '2023-02-15T07:52:31.998761Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the bank account.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        customer:
          type: string
          nullable: true
          format: uuid
          description: |
            Belvo's unique ID for the customer associated with the bank account.

            For `BUSINESS` bank accounts, this field is `null`.
          example: null
        institution:
          type: string
          nullable: true
          format: uuid
          description: |
            Belvo's unique ID for the institution that the bank account is created in.

            For `BUSINESS` bank accounts that Belvo creates for organizations, this field is `null`.
          example: null
        number:
          type: string
          description: |
            The bank account number of the payment beneficiary.
          example: '******5633'
        holder:
          $ref: '#/components/schemas/HolderBusinessResponsePse'
        details:
          type: object
          description: |
            For PSE, this field will return an empty object.
          example: {}
        providers:
          description: |
            Information about the payment service provider. For PSE, the value must be `payments_way`.
          oneOf:
            - $ref: '#/components/schemas/ProvidersPse'
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
    BankAccountPseResponse:
      type: object
      title: Colombia 🇨🇴 PSE
      oneOf:
        - $ref: '#/components/schemas/BankAccountBusinessPse'
    BankAccountPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of bank account objects.
              items:
                oneOf:
                  - $ref: '#/components/schemas/BankAccountOfpiResponse'
                  - $ref: '#/components/schemas/BankAccountPseResponse'
    HolderInformationBusinessOfpi:
      type: object
      description: Additional information about the bank account holder required in order to create the account for OFPI.
      title: BUSINESS
      required:
        - name
        - identifier
        - identifier_type
      properties:
        name:
          type: string
          description: The bank account holder's first name.
          example: Caetano Veloso Entertainment Universe
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        identifier:
          type: string
          description: The document number of the company's ID.
          example: '00000000000191'
    HolderInformationIndividualOfpi:
      type: object
      description: Additional information about the bank account holder required in order to create the account for OFPI.
      title: INDIVIDUAL
      required:
        - first_name
        - last_name
        - identifier
        - identifier_type
      properties:
        first_name:
          type: string
          description: The bank account holder's first name.
          example: Caetano
        last_name:
          type: string
          description: The bank account holder's last name.
          example: Veloso
        identifier_type:
          $ref: '#/components/schemas/EnumCustomerIdentifierTypeOfpi'
        identifier:
          type: string
          description: The document number of the customer's ID.
          example: '00000000000191'
    BankAccountHolderRequestOfpi:
      type: object
      title: OFPI
      required:
        - type
        - information
      description: Details regarding the business bank account holder.
      properties:
        type:
          $ref: '#/components/schemas/EnumBankAccountHolderTypeOfpi'
        information:
          oneOf:
            - $ref: '#/components/schemas/HolderInformationBusinessOfpi'
            - $ref: '#/components/schemas/HolderInformationIndividualOfpi'
    CreateBankAccountOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - institution
        - holder
        - details
      properties:
        institution:
          type: string
          format: uuid
          description: Belvo's unique ID for the institution that the bank account is created in.
          example: f512d996-583a-4a91-8b5b-eba2e103b068
        holder:
          description: Information regarding the individual bank account holder.
          oneOf:
            - $ref: '#/components/schemas/BankAccountHolderRequestOfpi'
        details:
          description: Information regarding the bank account.
          oneOf:
            - $ref: '#/components/schemas/BankAccountDetailsOfpi'
    HolderInformationBusinessPse:
      type: object
      title: PSE
      required:
        - name
      properties:
        name:
          type: string
          description: |
            The business name.


            Note, this is only applicable if the `holder.type` is set to `BUSINESS`.
          example: Trusty documentation services
    HolderBusinessPse:
      type: object
      title: PSE
      required:
        - type
        - information
      description: Details regarding the business bank account holder.
      properties:
        type:
          $ref: '#/components/schemas/EnumBankAccountHolderTypePse'
        information:
          $ref: '#/components/schemas/HolderInformationBusinessPse'
    ProvidersRequestBodyPse:
      type: object
      title: Payments Way
      required:
        - terminal_id
        - form_id
      properties:
        terminal_id:
          type: integer
          format: int32
          description: |
            Your unique Payments Way terminal ID.


            **Note:** Belvo provides you with the Payments Way terminal ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂
          example: 123
        form_id:
          type: integer
          format: int32
          description: |
            Your unique Payments Way form ID.


            **Note:** Belvo provides you with the Payments Way form ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂
          example: 321
    ProvidersRequestPse:
      type: object
      title: PSE
      properties:
        payments_way:
          $ref: '#/components/schemas/ProvidersRequestBodyPse'
    CreateBankAccountPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - holder
        - providers
        - number
      properties:
        holder:
          description: Information regarding the business bank account holder.
          oneOf:
            - $ref: '#/components/schemas/HolderBusinessPse'
        providers:
          description: |
            Information about the payment service provider, required in order to establish a connection and process requests. For PSE, the value must be `payments_way`.
          oneOf:
            - $ref: '#/components/schemas/ProvidersRequestPse'
        number:
          type: string
          pattern: ^[0-9]+$
          description: |
            The bank account number of the payment beneficiary.

             **Note**: You can only send through numbers (`^[0-9]+$`) in the string. For example, `"457220"` is a valid bank account number, while "`45722-0`" is invalid as it contains a hyphen (`-`).
          example: '12343453245633'
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
    PaymentLinkCallbackUrlsResponse:
      type: object
      title: Payment Link Callback URLs
      description: |
        The URLs that the user should be redirected to.


        **Note:** This field will return an empty object if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).
      properties:
        cancel:
          type: string
          description: |
            The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.
          example: https://www.acmecorp.com/checkout/3487548/cancel
        success:
          type: string
          description: |
            The URL that the user should be redirected to when they complete the payment process successfully.
          example: https://www.acmecorp.com/checkout/3487548/success
    EnumPaymentLinksStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      description: |
        The current status of the payment link. Can be either:

          - `ACTIVE` meaning that the payment intent's status is either `REQUIRES_PAYMENT_METHOD`, `REQUIRES_ACTION`, or `PROCESSING`.
          - `INACTIVE` meaning that the payment intent's status is either `SUCCEEDED` or `FAILED`.

        **Note:** You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request. 
      example: ACTIVE
    PaymentLinkListOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - id
        - created_at
        - created_by
        - payment_url
        - callback_urls
        - status
        - expires_in
        - expires_at
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment link.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the payment link.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        payment_url:
          type: string
          description: The URL for the hosted-widget that will guide your user through the payments process.
          example: https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        access_token:
          type: string
          description: |
            The Belvo-generated access token for the payment link.


            **Note:** You'll need the `access_token` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.
          example: YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrlsResponse'
        payment_intent:
          type: string
          format: uuid
          description: Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.
          example: b7dd85b1-671e-45c7-aba6-b4b37a8fc0c2
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link was last updated.
          example: '2022-02-09T08:45:50.406032Z'
        status:
          $ref: '#/components/schemas/EnumPaymentLinksStatus'
        expires_in:
          type: string
          pattern: \d+([mhd])
          description: |
            The payment link expiration time.  
          example: 7d
        expires_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link is set to expire.
          example: '2023-02-09T08:45:50.406032Z'
    PaymentLinkListPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - id
        - created_at
        - created_by
        - payment_url
        - callback_urls
        - status
        - expires_in
        - expires_at
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment link.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the payment link.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        payment_url:
          type: string
          description: The URL for the hosted-widget that will guide your user through the payments process.
          example: https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        access_token:
          type: string
          description: |
            The Belvo-generated access token for the payment link.


            **Note:** You'll need the `access_token` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.
          example: YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrlsResponse'
        payment_intent:
          type: string
          format: uuid
          description: Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.
          example: b7dd85b1-671e-45c7-aba6-b4b37a8fc0c2
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link was last updated.
          example: '2022-02-09T08:45:50.406032Z'
        status:
          $ref: '#/components/schemas/EnumPaymentLinksStatus'
        expires_in:
          type: string
          pattern: \d+([mhd])
          description: |
            The payment link expiration time.  
          example: 7d
        expires_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link is set to expire.
          example: '2023-02-09T08:45:50.406032Z'
    PaymentLinkPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of bank account objects.
              items:
                oneOf:
                  - $ref: '#/components/schemas/PaymentLinkListOfpi'
                  - $ref: '#/components/schemas/PaymentLinkListPse'
    EnumPaymentLinkAllowedPaymentMethod:
      type: string
      enum:
        - open_finance
        - pse
      description: |
        Selected payment method type.

          - For 🇧🇷 Brazil's OFPI, the value must be `open_finance`.  
          - For 🇨🇴 Colombia's PSE, the value must be `pse`.
      example: open_finance
    EnumPaymentLinkProvider:
      type: string
      enum:
        - belvo
        - payments_way
      description: |
        The provider used for the payment link. 


        - For 🇧🇷 Brazil's OFPI, the value must be `belvo`.  
        - For 🇨🇴 Colombia's PSE, the value must be `payments_way`.
      example: belvo
    PaymentLinksPaymentMethodDetailsBodyOfpi:
      type: object
      title: OFPB
      description: Details about the organization's bank account that will receive the payment.
      required:
        - beneficiary_bank_account
      properties:
        beneficiary_bank_account:
          type: string
          format: uuid
          description: Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        callback_url:
          type: string
          description: |
            The URL to your application that your customer will be directed to once they confirm the payment in their bank application.
          example: https://www.acmecorp.com/checkout/3487321
    PaymentMethodDetailsOfpi:
      type: object
      title: OFPI
      description: Object with information required by Open Finance Payments in Brazil to create a payment intent.
      required:
        - open_finance
      properties:
        open_finance:
          $ref: '#/components/schemas/PaymentLinksPaymentMethodDetailsBodyOfpi'
    PaymentLinkCallbackUrls:
      type: object
      title: Payment Link Callback URLs
      properties:
        cancel:
          type: string
          description: |
            The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.


            **Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).
          example: https://www.acmecorp.com/checkout/3487548/cancel
        success:
          type: string
          description: |
            The URL that the user should be redirected to when they complete the payment process successfully.


            **Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).
          example: https://www.acmecorp.com/checkout/3487548/success
    CreatePaymentLinkOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - amount
        - customer
        - description
        - allowed_payment_method_types
        - provider
        - payment_method_details
      properties:
        amount:
          oneOf:
            - type: string
              title: string
              pattern: \d+(?:\.\d{1,2})?
              example: '1234.12'
            - type: number
              format: float
              title: float
              minimum: 0.01
              maximum: 9999999999.99
              example: 1234.12
          description: |
            Amount to be paid by your customer. For OFPI, you can send through numbers with up to two decimal points, separated by a `.` period. For example: `1234.12`

            **Note:** You can send through this value either as a string or an float. Regardless of the type you choose to send the `amount` as, Belvo returns a string with two decimal points, separated by a period ( `.`). For example, `1234.12`.
        customer:
          type: string
          description: |
            Belvo's unique ID to reference the customer.
          example: 06dc2f14-1217-4480-9b36-550a944a39d1
        description:
          type: string
          description: |
            The description of the payment.
          example: Shoe payment
        allowed_payment_method_types:
          type: array
          description: A list of payment method types allowed in this payment intent. For OFPI, this value must be set to `open_finance`.
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        payment_method_details:
          $ref: '#/components/schemas/PaymentMethodDetailsOfpi'
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrls'
        expires_in:
          type: string
          pattern: \d+([mhd])
          default: 7d
          description: |
            The payment link expiration time. It allows the following formats to be sent through:

              - whole number + `m` for x amount of minutes. For example: `15m` for 15 minutes.
              - whole number + `h` for x amount of hours. For example: `12h` for 12 hours.
              - whole number + `d` for x amount of days. For example: `30d` for 30 days.

              ℹ️ The minimum expiration time allowed for a payment link is `1m` (1 minute) and the maximum is `90d` (90 days).
          example: 7d
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment link.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
    PaymentLinksPaymentMethodDetailsBodyPse:
      type: object
      title: PSE
      description: Details about the organization's bank account that will receive the payment.
      required:
        - beneficiary_bank_account
      properties:
        beneficiary_bank_account:
          type: string
          format: uuid
          description: Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        callback_url:
          type: string
          description: |
            The URL to your application that your customer will be directed to once they confirm the payment in their bank application.
          example: https://www.acmecorp.com/checkout/3487321
        belvo_flow:
          type: boolean
          default: true
          description: |
            This parameter determines the payment flow of the payment intent. By default, this is set to `true` and the payment intent created is processed using Belvo's payment flow and Belvo-integrated institutions. When set to `false`, the non-Belvo flow is used for the payment intent process.       

            For more information about payment flows, see our dedicated [Payment Intents guides section for PSE](https://developers.belvo.com/docs/colombia-pse#payment-intents).
          example: true
    PaymentMethodDetailsPse:
      type: object
      title: PSE
      description: Object with information required by PSE to create a payment intent.
      required:
        - pse
      properties:
        pse:
          $ref: '#/components/schemas/PaymentLinksPaymentMethodDetailsBodyPse'
    CreatePaymentLinkPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - amount
        - customer
        - description
        - provider
        - payment_method_details
      properties:
        amount:
          oneOf:
            - type: string
              title: string
              pattern: '[1-9]\d{0,9}'
              example: '350000'
            - type: integer
              format: int64
              title: integer
              maximum: 9999999999
              minimum: 1
              example: 350000
          description: |
            Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: `350000`.

            **Note:** You can send this value either as a string or an integer. Regardless of the type you choose to send the `amount` as, Belvo returns a string with two decimal points, separated by a period ( `.`). For example, `350000.00`.
        customer:
          type: string
          description: |
            Belvo's unique ID to reference the customer.
          example: 06dc2f14-1217-4480-9b36-550a944a39d1
        description:
          type: string
          description: |
            The description of the payment.
          example: Shoe payment
        allowed_payment_method_types:
          type: array
          description: A list of payment method types allowed in this payment intent. For PSE, this value must be set to `pse`.
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        payment_method_details:
          $ref: '#/components/schemas/PaymentMethodDetailsPse'
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrls'
        expires_in:
          type: string
          pattern: \d+([mhd])
          default: 7d
          description: |
            The payment link expiration time. It allows the following formats to be sent through:

              - whole number + `m` for x amount of minutes. For example: `15m` for 15 minutes.
              - whole number + `h` for x amount of hours. For example: `12h` for 12 hours.
              - whole number + `d` for x amount of days. For example: `30d` for 30 days.

              ℹ️ The minimum expiration time allowed for a payment link is `1m` (1 minute) and the maximum is `90d` (90 days).
          example: 7d
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment link.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
    EnumPaymentsCurrency:
      type: string
      enum:
        - BRL
        - COP
      description: |
        The currency of the amount paid.


          - 🇧🇷 BRL (Brazilian Real)
          - 🇨🇴 COP (Colombian Peso)
      example: COP
    DisplayPaymentMethodInformationContentOfpi:
      type: object
      title: Display Open Finance Brazil payment method information
      description: Object detailing what payment method information you need to display.
      properties:
        institutions:
          type: array
          description: |
            An array of institution objects.
          items:
            $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayPaymentMethodInformation:
      type: object
      title: OFPI -  Display Payment Method Information
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_payment_method_information
        open_finance_display_payment_method_information:
          $ref: '#/components/schemas/DisplayPaymentMethodInformationContentOfpi'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`, you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: false
    NeedsRedirectContent:
      type: object
      description: Details regarding the payer institution.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepNeedsRedirect:
      type: object
      title: OFPI - Needs Redirect
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_needs_redirect
        open_finance_display_needs_redirect:
          $ref: '#/components/schemas/NeedsRedirectContent'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`, you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: false
    BankAccountDetailsOpenFinance:
      type: object
      title: OFPI (PIX Account Information)
      required:
        - country
        - account_type
        - agency
        - number
      properties:
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        account_type:
          $ref: '#/components/schemas/EnumBankAccountPixAccountTypeOfpi'
        agency:
          type: string
          description: The agency (branch number) of the institution where the account was created.
          example: '0444'
        number:
          type: string
          description: The bank account number.
          example: 45722-0
    BankAccountDetailsOpenFinancePix:
      type: object
      title: OFPI (PIX Keys)
      required:
        - country
        - pix_key
      properties:
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        pix_key:
          type: string
          description: The PIX key identifier of the bank account.
          example: RANDOM://6c1c236c-a035-4b80-ab12-e38f88ce82ab
    BeneficiaryBankAccountOfpi:
      type: object
      title: Beneficiary Bank Account
      required:
        - id
        - created_at
        - created_by
        - customer
        - institution
        - number
        - holder
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the beneficiary bank account.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the bank account.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        institution:
          $ref: '#/components/schemas/paymentInstitution'
        details:
          oneOf:
            - $ref: '#/components/schemas/BankAccountDetailsOpenFinance'
            - $ref: '#/components/schemas/BankAccountDetailsOpenFinancePix'
        holder:
          $ref: '#/components/schemas/HolderResponseOfpi'
    DisplayConfirmationRequiredOfpi:
      type: object
      title: Display Open Finance Brazil confirmation required
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        beneficiary_bank_account:
          $ref: '#/components/schemas/BeneficiaryBankAccountOfpi'
        payer_name:
          type: string
          description: The name of the payer.
          example: Caetano Veloso
        payer_identifier:
          type: string
          description: The payer's ID.
          example: LV890273900-23
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayConfirmationRequiredOfpi:
      type: object
      title: OFPI - Display Confirmation Required
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_confirmation_required
        open_finance_display_confirmation_required:
          $ref: '#/components/schemas/DisplayConfirmationRequiredOfpi'
        ready_to_confirm:
          type: boolean
          default: true
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`, you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: true
    DisplayPaymentProcessing:
      type: object
      description: Details regarding the payer institution.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayPaymentProcessing:
      type: object
      title: OFPI - Payment Processing
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_payment_processing
        open_finance_display_payment_processing:
          $ref: '#/components/schemas/DisplayPaymentProcessing'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`, you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: false
    DisplayPaymentSucceeded:
      type: object
      description: Details regarding the payer institution.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayPaymentSucceeded:
      type: object
      title: OFPI - Payment Succeeded
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_payment_succeeded
        open_finance_display_payment_succeeded:
          $ref: '#/components/schemas/DisplayPaymentSucceeded'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`, you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: false
    DisplayPaymentFailed:
      type: object
      description: Details regarding the payer institution.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayPaymentFailed:
      type: object
      title: OFPI - Payment Failed
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - open_finance_display_payment_method_information
            - open_finance_display_confirmation_required
            - open_finance_display_needs_redirect
            - open_finance_display_payment_processing
            - open_finance_display_payment_succeeded
            - open_finance_display_payment_failed
          description: |
            The type of `next_step` you need to follow.
          example: open_finance_display_payment_failed
        open_finance_display_payment_failed:
          $ref: '#/components/schemas/DisplayPaymentFailed'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When set to `true`,you need to confirm the payment by making a PATCH request sending through `confirm: true`.
          example: false
    LastErrorPaymentError:
      type: object
      title: payment_error
      description: Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened during the payment intent process.
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`payment_error`) that allows you to classify and handle the error programmatically.
          example: payment_error
        error_message:
          type: string
          description: |
            A short description of the error.
          example: Unexpected error to confirm the payment
    PaymentIntentPaymentMethodDetailsBodyIndividualOfpi:
      type: object
      description: Payment method type selected.
      required:
        - beneficiary_bank_account
        - payer_institution
        - callback_url
      properties:
        beneficiary_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        payer_institution:
          type: string
          format: uuid
          description: Belvo's unique ID to reference the payer's institution.
          example: 600f1b4a-1ef9-4f89-b341-1a35f0c32cc0
        callback_url:
          type: string
          description: |
            The callback URL that your user will be redirected to after confirming the payment in their banking application.
          example: https://www.acmecorp.com/checkout/3487321
        cpf:
          type: string
          nullable: true
          description: |
            The customer's CPF number. Only required when the `customer_type` is `BUSINESS`.


            **Note:** This value is obfuscated.
          example: 23******00
    PaymentIntentPaymentMethodDetailsIndividualOfpi:
      type: object
      title: INDIVIDUAL
      description: Details about the OFPI payment method.
      required:
        - open_finance
      properties:
        open_finance:
          $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsBodyIndividualOfpi'
    PaymentIntentPaymentMethodDetailsBodyBusinessOfpi:
      type: object
      description: Payment method type selected.
      required:
        - beneficiary_bank_account
        - payer_institution
        - callback_url
        - cpf
      properties:
        beneficiary_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        payer_institution:
          type: string
          format: uuid
          description: Belvo's unique ID to reference the payer's institution.
          example: 600f1b4a-1ef9-4f89-b341-1a35f0c32cc0
        callback_url:
          type: string
          description: |
            The callback URL that your user will be redirected to after confirming the payment in their banking application.
          example: https://www.acmecorp.com/checkout/3487321
        cpf:
          type: string
          nullable: true
          description: |
            The customer's CPF number. Only required when the `customer_type` is `BUSINESS`.


            **Note:** This value is obfuscated.
          example: 23******00
    PaymentIntentPaymentMethodDetailsBusinessOfpi:
      type: object
      title: BUSINESS
      description: Details about the OFPI payment method.
      required:
        - open_finance
      properties:
        open_finance:
          $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsBodyBusinessOfpi'
    PaymentMethodInformationBodyOfpi:
      type: object
      description: Payment method type selected.
      properties:
        provider_request_id:
          type: string
          nullable: true
          description: |
            Unique ID for the payment, as sent by the provider.
          example: 978c0c97ea847e78e8849634473c1f1
        redirect_url:
          type: string
          nullable: true
          description: |
            URL that redirects the user to the institution's website.
          example: https://wakandanational.com/
        end_to_end_id:
          type: string
          nullable: true
          description: A unique ID for the transaction in the Brazil's PIX payment system.
          example: F203262942022211117487a213b1d140
    PaymentMethodInformationOfpi:
      type: object
      title: OFPI
      description: |
        Information about the payment method selected.
      properties:
        open_finance:
          $ref: '#/components/schemas/PaymentMethodInformationBodyOfpi'
    ChargePaymentMethodDetailsPseContent:
      type: object
      description: Information about the payer of a PSE payment.
      properties:
        payer_institution:
          type: string
          format: uuid
          description: |
            Unique identifier for the payer’s institution.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
        payer_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the customer’s bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
    ChargePaymentMethodDetailsPse:
      type: object
      title: PSE
      description: |
        Details about the payment method.
      properties:
        pse:
          $ref: '#/components/schemas/ChargePaymentMethodDetailsPseContent'
    ChargePaymentMethodDetailsOfpiContent:
      type: object
      description: Information about the payer of a PSE payment.
      properties:
        payer_institution:
          type: string
          format: uuid
          description: |
            Unique identifier for the payer’s institution.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
        beneficiary_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
    ChargePaymentMethodDetailsOfpi:
      type: object
      title: OFPI
      description: |
        Details about the payment method.
      properties:
        open_finance:
          $ref: '#/components/schemas/ChargePaymentMethodDetailsOfpiContent'
    PaymentMethodInformationBodyPse:
      type: object
      description: Payment method type selected.
      properties:
        provider_request_id:
          type: string
          nullable: true
          description: |
            Unique ID for the payment, as sent by the provider.
          example: c978c0c97ea847e78e8849634473c1f1
        redirect_url:
          type: string
          nullable: true
          description: |
            URL that redirects the user to the institution's website.
          example: https://wakandanational.com/
        bank_payment_id:
          type: string
          nullable: true
          description: |
            Unique payment ID provided the institution.
          example: '456213985641233659874512459842'
        end_to_end_id:
          type: string
          nullable: true
          description: A unique ID for the transaction in Colombia's Payments Way system.
          example: '2007300520'
    PaymentMethodInformationPse:
      type: object
      title: PSE
      description: |
        Information about the payment method selected.


        **Note**: If no payment method information is associated, we return an empty array.
      properties:
        pse:
          $ref: '#/components/schemas/PaymentMethodInformationBodyPse'
    EnumPaymentTransactionType:
      type: string
      enum:
        - INFLOW
        - OUTFLOW
      description: |
        The direction of the transaction.

          - `INFLOW` indicates money coming into the account.
          - `OUTFLOW` indicates money coming out of the account.
      example: INFLOW
    TransactionBankAccountOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      description: Object containing the payer's bank account information. For OFPI, this field will return an empty object.
    TransactionBankAccountBodyPse:
      type: object
      title: Bank account PSE
      description: |
        Information about the payer's bank account. Belvo returns the bank account ID when the account is already saved in the Belvo database.
      properties:
        bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique identifier for the payer’s bank account.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
    BankAccountInformationContentPse:
      type: object
      description: |
        Information about the payer's institution
      properties:
        payer_institution:
          type: string
          format: uuid
          description: |
            Belvo's unique identifier for the payer’s institution.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
    BankAccountInformationPse:
      type: object
      title: Bank account information PSE
      description: |
        Information about the payer's bank account. Belvo returns this object when the payer's bank account information is not saved in the Belvo database. 
      properties:
        bank_account_information:
          $ref: '#/components/schemas/BankAccountInformationContentPse'
    TransactionBankAccountPse:
      type: object
      title: Colombia 🇨🇴 PSE
      description: Object containing the payer's bank account information.
      oneOf:
        - $ref: '#/components/schemas/TransactionBankAccountBodyPse'
        - $ref: '#/components/schemas/BankAccountInformationPse'
    paymentTransaction:
      type: object
      required:
        - id
        - created_at
        - created_by
        - amount
        - currency
        - description
        - transaction_type
        - beneficiary
        - payer
        - charge
      properties:
        id:
          type: string
          format: uuid
          description: Belvo’s unique ID to reference the transaction.
          example: fd0f3303-cafb-47ea-9753-21155cb144ab
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the payment.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        amount:
          type: string
          description: |
            The transaction amount.


            **Note**: The amount displayed is always positive as we indicate the direction of the transaction in `transaction_type` parameter.
          example: '1020.00'
        currency:
          $ref: '#/components/schemas/EnumPaymentsCurrency'
        description:
          type: string
          description: |
            The description of the payment.
          example: Training shoes
        transaction_type:
          $ref: '#/components/schemas/EnumPaymentTransactionType'
        beneficiary:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        payer:
          oneOf:
            - $ref: '#/components/schemas/TransactionBankAccountOfpi'
            - $ref: '#/components/schemas/TransactionBankAccountPse'
        payment_intent:
          type: string
          format: uuid
          description: The unique ID of the payment intent associated with the transaction.
          example: 004a28bb-fac2-4172-884b-5b6ea15314ad
        customer:
          type: string
          format: uuid
          description: Belvo's unique ID for the customer asscociated with this transaction.
          example: 9eebd63b-3339-44a9-8a5a-72bb6cb2f310
    Charge:
      type: object
      required:
        - id
        - created_at
        - failure_code
        - failure_message
        - status
        - updated_at
        - amount
        - beneficiary
        - provider
        - metadata
        - payment_method_details
        - payment_method_information
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current charge.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the charge.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer:
          type: string
          format: uuid
          description: Belvo's unique ID for the customer that the charge was created for.
          example: 531aa631-70a0-4eeb-ab97-51dea3e90c89
        failure_code:
          type: string
          nullable: true
          description: |
            Error code that explains the reason behind a payment being unsuccessful (if applicable).
          example: null
        failure_message:
          type: string
          nullable: true
          description: |
            Further information regarding the `failure_code`.
          example: null
        status:
          type: string
          enum:
            - PENDING
            - SUCCEEDED
            - FAILED
          description: |
            The current status of the charge.
          example: PENDING
        amount:
          type: string
          nullable: true
          description: |
            The amount of the charge.
          example: '100.12'
        currency:
          $ref: '#/components/schemas/EnumPaymentsCurrency'
        description:
          type: string
          description: |
            The description of the payment.
          example: Training shoes
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
        beneficiary:
          type: string
          format: uuid
          description: Belvo's unique ID used to identify the beneficiary’s bank account.
          example: 58524ccc-89ac-4ab6-b62b-c3da3f19a722
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        payment_method_type:
          $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        payment_method_details:
          oneOf:
            - $ref: '#/components/schemas/ChargePaymentMethodDetailsPse'
            - $ref: '#/components/schemas/ChargePaymentMethodDetailsOfpi'
        payment_method_information:
          oneOf:
            - $ref: '#/components/schemas/PaymentMethodInformationPse'
        payment_intent:
          type: string
          format: uuid
          description: The `payment_intent.id` associated with this charge.
          example: 50c04229-7b1d-4a53-951c-8ad53e10c6ca
        transactions:
          type: array
          description: An array of Transaction objects relating to the charge.
          items:
            $ref: '#/components/schemas/paymentTransaction'
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the status of the charge was last updated.
          example: '2022-02-09T08:45:50.406032Z'
    EnumPaymentIntentStatus:
      type: string
      enum:
        - REQUIRES_PAYMENT_METHOD
        - REQUIRES_ACTION
        - SUCCEEDED
        - PROCESSING
        - FAILED
      description: |
        The current status of the payment intent.
      example: PROCESSING
    PaymentIntentOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - id
        - created_at
        - created_by
        - customer
        - allowed_payment_method_types
        - amount
        - currency
        - description
        - failure_code
        - failure_message
        - next_step
        - last_error
        - payment_method_details
        - payment_method_information
        - provider
        - status
        - updated_at
        - selected_payment_method_type
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created this payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer:
          type: string
          format: uuid
          description: Belvo's unique ID for the customer related to this payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        allowed_payment_method_types:
          type: array
          description: A list of payment method types allowed in this payment intent. For OFPI, the value will be `open_finance`.
          items:
            type: string
            example: open_finance
        amount:
          type: string
          description: |
            Amount to be paid by your customer.
          example: '1234.12'
        currency:
          $ref: '#/components/schemas/EnumPaymentsCurrency'
        description:
          type: string
          description: |
            The description of the payment.
          example: Training shoes
        failure_code:
          type: string
          nullable: true
          description: |
            Error code that explains the reason behind a payment being unsuccessful (if applicable).
          example: null
        failure_message:
          type: string
          nullable: true
          description: |
            Further information regarding the `failure_code`.
          example: null
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
        next_step:
          oneOf:
            - $ref: '#/components/schemas/NextStepDisplayPaymentMethodInformation'
            - $ref: '#/components/schemas/NextStepNeedsRedirect'
            - $ref: '#/components/schemas/NextStepDisplayConfirmationRequiredOfpi'
            - $ref: '#/components/schemas/NextStepDisplayPaymentProcessing'
            - $ref: '#/components/schemas/NextStepDisplayPaymentSucceeded'
            - $ref: '#/components/schemas/NextStepDisplayPaymentFailed'
        last_error:
          oneOf:
            - $ref: '#/components/schemas/LastErrorPaymentError'
        payment_method_details:
          anyOf:
            - $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsIndividualOfpi'
            - $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsBusinessOfpi'
        payment_method_information:
          $ref: '#/components/schemas/PaymentMethodInformationOfpi'
        charges:
          type: array
          deprecated: true
          description: |
            An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.


            **Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource. 
          items:
            $ref: '#/components/schemas/Charge'
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        selected_payment_method_type:
          $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        status:
          $ref: '#/components/schemas/EnumPaymentIntentStatus'
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment intent was last updated.
          example: '2022-02-09T08:45:50.406032Z'
    PaymentLinkOfpi:
      type: object
      title: Brazil 🇧🇷 OFPI
      required:
        - id
        - created_at
        - created_by
        - payment_url
        - callback_urls
        - status
        - expires_in
        - expires_at
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment link.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the payment link.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        payment_url:
          type: string
          description: The URL for the hosted-widget that will guide your user through the payments process.
          example: https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        access_token:
          type: string
          description: |
            The Belvo-generated access token for the payment link.


            **Note:** You'll need the `access_token` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.
          example: YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrlsResponse'
        payment_intent:
          $ref: '#/components/schemas/PaymentIntentOfpi'
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link was last updated.
          example: '2022-02-09T08:45:50.406032Z'
        status:
          $ref: '#/components/schemas/EnumPaymentLinksStatus'
        expires_in:
          type: string
          pattern: \d+([mhd])
          description: |
            The payment link expiration time.  
          example: 7d
        expires_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link is set to expire.
          example: '2023-02-09T08:45:50.406032Z'
    EnumPaymentIntentHolderTypePse:
      type: string
      enum:
        - INDIVIDUAL
        - BUSINESS
      description: |
        Type of bank account holder. For PSE, this value must be `INDIVIDUAL`.
      example: INDIVIDUAL
    HolderBankAccountInformationPse:
      type: object
      description: Object with additional information about the individual that holds the bank account.
      properties:
        first_name:
          type: string
          description: |
            The account holder's first name.
          example: Carlos
        last_name:
          type: string
          description: |
            The account holder's last name.
          example: Vives
    HolderBankAccountPse:
      type: object
      description: Details regarding the bank account holder.
      properties:
        type:
          $ref: '#/components/schemas/EnumPaymentIntentHolderTypePse'
        information:
          $ref: '#/components/schemas/HolderBankAccountInformationPse'
    PaymentMethodInformationDetailsPse:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/EnumPaymentsCountry'
        account_type:
          type: string
          description: |
            The type of bank account. For example, `Ahorros` or `Corriente`.
          example: Ahorros
    PaymentMethodInfoCustomerBankAccountsPse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the customer’s bank account.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer:
          type: string
          format: uuid
          description: Belvo's unique ID for the current customer.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        institution:
          $ref: '#/components/schemas/paymentInstitution'
        number:
          type: string
          description: |
            The customer's bank account number. This value is obfuscated.
          example: '******1234'
        holder:
          $ref: '#/components/schemas/HolderBankAccountPse'
        details:
          $ref: '#/components/schemas/PaymentMethodInformationDetailsPse'
    DisplayPaymentMethodInformationContentPse:
      type: object
      title: Display PSE payment method information
      description: Object detailing what payment method information you need to display.
      properties:
        customer_bank_accounts:
          type: array
          description: |
            Array of bank account objects.


            **Note**: If there are no customer accounts saved in the Belvo database, we return an empty array.
          items:
            $ref: '#/components/schemas/PaymentMethodInfoCustomerBankAccountsPse'
        institutions:
          type: array
          description: |
            An array of institution objects.
          items:
            $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayPaymentMethodInformationPse:
      type: object
      title: Display PSE payment method information
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type. You'll need to send a PATCH request with the institution selected by the customer or their bank accounts (if there are accounts already saved in the Belvo database).
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_payment_method_information
        pse_display_payment_method_information:
          $ref: '#/components/schemas/DisplayPaymentMethodInformationContentPse'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When the value is `true`, you'll need to make a PATCH request sending through `confirm: true` to confirm the payment.
          example: false
    DisplayCredentialsRequiredContentPse:
      type: object
      title: Display PSE confirmation required
      description: Object containing form fields for the required credentials (for example, `username` or `password`) in this step.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayCredentialsRequiredPse:
      type: object
      title: Display PSE credentials required
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_credentials_required
        pse_display_credentials_required:
          $ref: '#/components/schemas/DisplayCredentialsRequiredContentPse'
        ready_to_confirm:
          type: boolean
          default: false
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When the value is `true`, you'll need to make a PATCH request sending through `confirm: true` to confirm the payment.
          example: false
    NeedsRedirectContentPse:
      type: object
      description: Details regarding the payer institution.
      properties:
        payer_institution:
          $ref: '#/components/schemas/InstitutionFormField'
    NextStepDisplayNeedsRedirectPse:
      type: object
      title: Display PSE needs redirect
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_needs_redirect
        pse_display_needs_redirect:
          $ref: '#/components/schemas/NeedsRedirectContentPse'
        ready_to_confirm:
          type: boolean
          default: true
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When the value is `true`, you'll need to make a PATCH request sending through `confirm: true` to confirm the payment.
          example: true
    DisplayTokenRequiredContentPse:
      type: object
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayTokenRequiredPse:
      type: object
      title: Display PSE token required
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_token_required
        pse_display_token_required:
          $ref: '#/components/schemas/DisplayTokenRequiredContentPse'
        ready_to_confirm:
          type: boolean
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. This value will return: 

              - `false` when a customer wants to pay for the very first time. This is so because you still need to input information about your customer in the following steps to process a payment successfully. 
              - `true` when a customer wants to pay and this is not their first time. This is so because the payment intent has all the information needed about the customer to process a payment. 


            **Note:** When the value is `true`, you'll need to confirm the payment intent. You can do this by making a PATCH request sending through the parameter `confirm: true`.
          example: true
    BeneficiaryBankAccountPse:
      type: object
      title: Beneficiary Bank Account PSE
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the beneficiary bank account.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        institution:
          type: string
          nullable: true
          format: uuid
          description: Belvo's unique ID for the institution that the bank account is created in.
          example: f512d996-583a-4a91-8b5b-eba2e103b068
        number:
          type: string
          nullable: true
          description: The bank account number.
          example: '******1213'
        holder:
          $ref: '#/components/schemas/HolderBusinessResponsePse'
    DisplayCustomerBankAccountsContentPse:
      type: object
      title: Display PSE payment method information
      description: Object detailing what payment method information you need to display.
      properties:
        customer_bank_accounts:
          type: array
          description: |
            Array of customer bank account objects.
          items:
            $ref: '#/components/schemas/PaymentMethodInfoCustomerBankAccountsPse'
        beneficiary_bank_account:
          $ref: '#/components/schemas/BeneficiaryBankAccountPse'
    NextStepDisplayCustomerBankAccountsPse:
      type: object
      title: Display PSE customer bank accounts
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_customer_bank_accounts
        pse_display_customer_bank_accounts:
          $ref: '#/components/schemas/DisplayCustomerBankAccountsContentPse'
        ready_to_confirm:
          type: boolean
          default: true
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When the value is `true`, you'll need to make a PATCH request sending through `confirm: true` to confirm the payment.
          example: true
    DisplayConfirmationRequiredContentPse:
      type: object
      title: Display PSE Colombia confirmation required.
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        payer_institution:
          $ref: '#/components/schemas/paymentInstitution'
    NextStepDisplayConfirmationRequiredPse:
      type: object
      title: Display PSE confirmation required
      description: |
        Object detailing the next steps you should follow for a specific `next_step` type.
      properties:
        type:
          type: string
          enum:
            - pse_display_payment_method_information
            - pse_display_credentials_required
            - pse_display_needs_redirect
            - pse_display_token_required
            - pse_display_customer_bank_accounts
            - pse_display_confirmation_required
            - pse_display_payment_processing
            - pse_display_payment_failed
            - pse_display_payment_succeeded
          description: |
            The type of `next_step` you need to follow.
          example: pse_display_confirmation_required
        pse_display_confirmation_required:
          $ref: '#/components/schemas/DisplayConfirmationRequiredContentPse'
        ready_to_confirm:
          type: boolean
          default: true
          description: |
            Boolean that indicates whether the payment intent is ready to be confirmed. 

              **Note:** When the value is `true`, you'll need to make a PATCH request sending through `confirm: true` to confirm the payment.
          example: true
    LastErrorInvalidCredentials:
      type: object
      title: invalid_credentials
      description: Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the credentials that your customer provides are incorrect.
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`invalid_credentials`) that allows you to classify and handle the error programmatically.
          example: invalid_credentials
        error_message:
          type: string
          description: |
            A short description of the error.
          example: The credentials sent are incorrect, please try again.
    LastErrorInvalidToken:
      type: object
      title: invalid_token
      description: Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the MFA token your customer provides is invalid.
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`invalid_token`) that allows you to classify and handle the error programmatically.
          example: invalid_token
        error_message:
          type: string
          description: |
            A short description of the error.
          example: The token sent is incorrect or has expired, please try again.
    LastErrorLoginError:
      type: object
      title: login_error
      description: Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the `pse_display_credentials_required` next step.
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`login_error`) that allows you to classify and handle the error programmatically.
          example: login_error
        error_message:
          type: string
          description: |
            A short description of the error.
          example: Provider login error
    LastErrorTwoFactor:
      type: object
      title: login_two_factor_error
      description: Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the `pse_display_token_required` next step.
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`login_two_factor_error`) that allows you to classify and handle the error programmatically.
          example: login_two_factor_error
        error_message:
          type: string
          description: |
            A short description of the error.
          example: Provider login two factor error
    LastErrorSessionExpired:
      type: object
      title: session_expired
      description: |
        Information about the error you ran into in the previous step of the payment intent, if applicable. This error occurs when you try to send a PATCH request after the session has already expired (the session expires after 10 minutes).
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
          description: |
            A unique error code (`session_expired`) that allows you to classify and handle the error programmatically.
          example: session_expired
        error_message:
          type: string
          description: |
            A short description of the error.
          example: Bank session was not found.
    PaymentIntentPaymentMethodDetailsBodyPse:
      type: object
      description: Details about the payment method type selected.
      required:
        - beneficiary_bank_account
        - callback_url
        - belvo_flow
      properties:
        payer_institution:
          type: string
          format: uuid
          description: |
            Belvo's unique identifier for the payer’s institution.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
        payer_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the customer’s bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        beneficiary_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique ID used to identify the beneficiary’s bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        username:
          type: string
          description: |
            The username used to log in to the institution. This value is obfuscated.
          example: '***'
        password:
          type: string
          description: |
            The password used to log in to the institution. This value is obfuscated.
          example: '***'
        callback_url:
          type: string
          description: |
            The callback URL that your user will be redirected to after confirming the payment in their banking application.
          example: https://www.acmecorp.com/checkout/3487321
        belvo_flow:
          type: boolean
          default: true
          description: |
            This parameter determines the payment flow of the payment intent. By default, this is set to `true` and the payment intent created is processed using the Belvo's payment flow and Belvo-integrated institutions. When set to `false`, the non-Belvo flow is used for the payment intent process.

            For more information about payment flows, see our dedicated [Payment Intents guides section for PSE](https://developers.belvo.com/docs/colombia-pse#payment-intents).
          example: true
    PaymentIntentPaymentMethodDetailsPse:
      type: object
      title: PSE
      description: Details about the PSE payment method.
      properties:
        pse:
          $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsBodyPse'
    PaymentIntentPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - id
        - created_at
        - created_by
        - customer
        - allowed_payment_method_types
        - amount
        - currency
        - description
        - failure_code
        - failure_message
        - next_step
        - last_error
        - payment_method_details
        - payment_method_information
        - provider
        - status
        - updated_at
        - selected_payment_method_type
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created this payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        customer:
          type: string
          format: uuid
          description: Belvo's unique ID for the customer related to this payment intent.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        allowed_payment_method_types:
          type: array
          description: A list of payment method types allowed in this payment intent. For PSE, the value will be `pse`.
          items:
            $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        amount:
          type: string
          description: |
            Amount to be paid by your customer. 
          example: '350000.00'
        currency:
          $ref: '#/components/schemas/EnumPaymentsCurrency'
        description:
          type: string
          description: |
            The description of the payment.
          example: Training shoes
        failure_code:
          type: string
          nullable: true
          description: |
            Error code that explains the reason behind a payment being unsuccessful (if applicable).
          example: null
        failure_message:
          type: string
          nullable: true
          description: |
            Further information regarding the `failure_code`.
          example: null
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
        next_step:
          oneOf:
            - $ref: '#/components/schemas/NextStepDisplayPaymentMethodInformationPse'
            - $ref: '#/components/schemas/NextStepDisplayCredentialsRequiredPse'
            - $ref: '#/components/schemas/NextStepDisplayNeedsRedirectPse'
            - $ref: '#/components/schemas/NextStepDisplayTokenRequiredPse'
            - $ref: '#/components/schemas/NextStepDisplayCustomerBankAccountsPse'
            - $ref: '#/components/schemas/NextStepDisplayConfirmationRequiredPse'
        last_error:
          oneOf:
            - $ref: '#/components/schemas/LastErrorInvalidCredentials'
            - $ref: '#/components/schemas/LastErrorInvalidToken'
            - $ref: '#/components/schemas/LastErrorLoginError'
            - $ref: '#/components/schemas/LastErrorTwoFactor'
            - $ref: '#/components/schemas/LastErrorPaymentError'
            - $ref: '#/components/schemas/LastErrorSessionExpired'
        payment_method_details:
          $ref: '#/components/schemas/PaymentIntentPaymentMethodDetailsPse'
        payment_method_information:
          $ref: '#/components/schemas/PaymentMethodInformationPse'
        charges:
          type: array
          deprecated: true
          description: |
            An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.


            **Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource. 
          items:
            $ref: '#/components/schemas/Charge'
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        selected_payment_method_type:
          $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        status:
          $ref: '#/components/schemas/EnumPaymentIntentStatus'
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment intent was last updated.
          example: '2022-02-09T08:45:50.406032Z'
    PaymentLinkPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - id
        - created_at
        - created_by
        - payment_url
        - callback_urls
        - status
        - expires_in
        - expires_at
      properties:
        id:
          type: string
          format: uuid
          description: Belvo's unique ID for the current payment link.
          example: 1c83ead8-6665-429c-a17a-ddc76cb3a95e
        created_at:
          type: string
          format: date-time
          description: The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
          example: '2022-02-09T08:45:50.406032Z'
        created_by:
          type: string
          format: uuid
          description: Belvo's unique ID for the user that created the payment link.
          example: 62053a72-e2d5-4c95-a578-6b16616900ac
        payment_url:
          type: string
          description: The URL for the hosted-widget that will guide your user through the payments process.
          example: https://pay.belvo.io/YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        access_token:
          type: string
          description: |
            The Belvo-generated access token for the payment link.


            **Note:** You'll need the `access_token` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.
          example: YggaKvPbM5aJhksu1BEwDI5FKTcUc5wZqNB-wH7MFGU
        callback_urls:
          $ref: '#/components/schemas/PaymentLinkCallbackUrlsResponse'
        payment_intent:
          $ref: '#/components/schemas/PaymentIntentPse'
        updated_at:
          type: string
          nullable: true
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link was last updated.
          example: '2022-02-09T08:45:50.406032Z'
        status:
          $ref: '#/components/schemas/EnumPaymentLinksStatus'
        expires_in:
          type: string
          pattern: \d+([mhd])
          description: |
            The payment link expiration time. 
          example: 7d
        expires_at:
          type: string
          format: date-time
          description: |
            The ISO-8601 timestamp of when the payment link is set to expire.
          example: '2023-02-09T08:45:50.406032Z'
    PaymentIntentPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of payment intent objects.
              items:
                oneOf:
                  - $ref: '#/components/schemas/PaymentIntentPse'
    PaymentIntentsPaymentMethodDetailsBodyPse:
      type: object
      title: PSE
      description: Details about the organization's bank account that will receive the payment.
      required:
        - beneficiary_bank_account
        - callback_url
      properties:
        beneficiary_bank_account:
          type: string
          format: uuid
          description: Belvo's unique ID used to identify the beneficiary's bank account.
          example: a80d5a9d-20ae-479a-8dd7-ff3443bcbbfc
        callback_url:
          type: string
          description: |
            The URL to your application that your customer will be directed to once they confirm the payment in their bank application.
          example: https://www.acmecorp.com/checkout/3487321
        belvo_flow:
          type: boolean
          default: true
          description: |
            This parameter determines the payment flow of the payment intent. By default, this is set to `true` and the payment intent created is processed using the Belvo's payment flow and Belvo-integrated institutions. When set to `false`, the non-Belvo flow is used for the payment intent process.

            For more information about payment flows, see our dedicated [Payment Intents guides section for PSE](https://developers.belvo.com/docs/colombia-pse#payment-intents).
          example: true
    PaymentIntentsPaymentMethodDetailsPse:
      type: object
      title: PSE
      description: Object with payment method details to create a payment intent.
      required:
        - pse
      properties:
        pse:
          $ref: '#/components/schemas/PaymentIntentsPaymentMethodDetailsBodyPse'
    CreatePaymentIntentPse:
      type: object
      title: Colombia 🇨🇴 PSE
      required:
        - amount
        - customer
        - description
        - allowed_payment_method_types
        - payment_method_details
        - provider
      properties:
        amount:
          oneOf:
            - type: string
              title: string
              pattern: '[1-9]\d{0,9}'
              example: '350000'
            - type: integer
              format: int64
              title: integer
              maximum: 9999999999
              minimum: 1
              example: 350000
          description: |
            Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: `350000`.

            **Note:** You can send through this value either as a string or an integer. Regardless of the type you choose to send the `amount` as, Belvo returns a string with two decimal points, separated by a period ( `.`). For example, `350000.00`.
        customer:
          type: string
          format: uuid
          description: |
            Belvo's unique ID to reference the customer.
          example: 06dc2f14-1217-4480-9b36-550a944a39d1
        description:
          type: string
          description: |
            The description of the payment.
          example: Training shoes
        allowed_payment_method_types:
          type: array
          description: A list of payment method types allowed in this payment intent. For PSE, this value must be set to `pse`.
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumPaymentLinkAllowedPaymentMethod'
        payment_method_details:
          $ref: '#/components/schemas/PaymentIntentsPaymentMethodDetailsPse'
        provider:
          $ref: '#/components/schemas/EnumPaymentLinkProvider'
        metadata:
          type: object
          description: |
            Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.


            ⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.
          example:
            internal_reference_id: GGq73487w2
    PatchPaymentMethodDetailsPse:
      type: object
      description: Object with required fields to fill information in the payment intent object. The information you need to send through depends on the next step Belvo returns in the response.
      properties:
        payer_institution:
          type: string
          format: uuid
          description: |
            Belvo's unique identifier for the payer’s institution.


            **Note**: You need to send through this information after you received the `pse_display_payment_method_information` next step in the payment intent.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
        username:
          type: string
          description: |
            The username used to log in to the institution.


            **Note**: You need to send through this information after you received the `pse_display_credentials_required` next step in the payment intent.
          example: username
        username_type:
          type: string
          description: |
            The username type used to log in to the institution. For example, `CC`, `PP`, or `NITE`. 


            **Note**: This parameter is only required when in the institution `form_fields` array the `username_type` field is returned. For each institution, we return the list of possible `username_type`s that the user can input.
          example: username
        password:
          type: string
          description: |
            The password used to log in to the institution.


            **Note**: You need to send through this information after you received the `pse_display_credentials_required` next step in the payment intent.
          example: '123456'
        payer_token:
          type: string
          description: |
            The MFA token generated by the institution and required to continue the payment flow.


            **Note**: You need to send through this information if you received the `pse_display_token_required` next step in the payment intent.
          example: '123456'
        payer_bank_account:
          type: string
          format: uuid
          description: |
            Belvo's unique identifier for the payer’s bank account.


            **Note**: You need to send through this information after you received the `pse_display_customer_bank_accounts` next step in the payment intent.
          example: db201c6a-e0ee-4caa-92d6-72b480d6d86f
    PatchPaymentIntentsBodyPse:
      type: object
      title: PATCH payment method details
      properties:
        pse:
          $ref: '#/components/schemas/PatchPaymentMethodDetailsPse'
    PatchPaymentIntentPse:
      type: object
      required:
        - payment_method_details
      properties:
        payment_method_details:
          oneOf:
            - $ref: '#/components/schemas/PatchPaymentIntentsBodyPse'
        confirm:
          type: boolean
          description: |
            Boolean that indicates whether this request confirms the payment intent. 


            **Note:** You'll need to send this parameter set to `true` when the payment intent next_step returns `ready_to_confirm: true`, meaning the payment intent is ready to be confirmed. 
          example: true
    PaymentsTransactionsPaginatedResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/payments_common_pagination_properties'
        - properties:
            results:
              type: array
              description: Array of transaction objects.
              items:
                $ref: '#/components/schemas/paymentTransaction'
  parameters:
    page:
      name: page
      required: false
      in: query
      description: A page number within the paginated result set.
      schema:
        example: 1
        format: int32
        type: integer
    page_size:
      name: page_size
      required: false
      in: query
      description: |
        Indicates how many results to return per page. By default we return 100 results per page.

        ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
        maximum: 1000
        example: 100
    country:
      name: country
      required: false
      in: query
      description: Return institutions only for this country.
      schema:
        example: COL
        type: string
    country__in:
      name: country__in
      required: false
      in: query
      description: Return institutions only for one of these countries.
      schema:
        example: COL,BRA
        type: string
    created_at:
      name: created_at
      in: query
      description: Return items that were last updated in Belvo's database on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-05'
    created_at__gt:
      name: created_at__gt
      in: query
      description: Return items that were last updated in Belvo's database after this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-05'
    created_at__gte:
      name: created_at__gte
      in: query
      description: Return items that were last updated in Belvo's database after or on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-04'
    created_at__lt:
      name: created_at__lt
      in: query
      description: Return items that were last updated in Belvo's database before this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-04-01'
    created_at__lte:
      name: created_at__lte
      in: query
      description: Return items that were last updated in Belvo's database before or on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-03-30'
    created_at__range:
      name: created_at__range
      in: query
      description: Return accounts that were last updated in Belvo's database between two dates (in `YYYY-MM-DD` format).
      style: form
      explode: false
      schema:
        type: array
        maxItems: 2
        items:
          type: string
          format: date
          example: '2022-03-03'
        example: ['2022-03-03','2022-05-04']
    id__in:
      name: id__in
      in: query
      description: Return information for these resource `id`s.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: 6b3dea0f-be29-49d1-aabe-1a6d588642e6
        example: ['24ccab1d-3a86-4136-a6eb-e04bf52b356f','beb2b197-3cf7-428d-bef3-f415c0d57509']
    customer__type:
      name: customer__type
      required: false
      in: query
      description: Return results only for this customer type (either `INDIVIDUAL` or `BUSINESS`).
      schema:
        example: INDIVIDUAL
        type: string
    search:
      name: search
      required: false
      in: query
      description: |
        Return results that match the description you searched for. 

        **Note:**

        This filter supports both full and partial search queries, with a minimum of three characters required.

        For example, searching for `trai` may match the following values:

          - `Awesome training sneakers` 
          - `Training equipment`

        Searching for `car` may match the following values:

                - `Carlos Vives`
                - `Carmen Domínguez` 
                - `carlos.vives@musicacolombia.co`
      schema:
        type: string
        minLength: 3
        example: trai
    number:
      name: number
      required: false
      in: query
      description: Return results that exactly match a value.
      schema:
        example: '1231564526'
        type: string
    number__in:
      name: number__in
      required: false
      in: query
      description: Return results for listed numbers.
      schema:
        example: 1231564526,15648325
        type: string
    customer:
      name: customer
      required: false
      in: query
      description: The `customer.id` you want to get results for.
      schema:
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d
        type: string
    institution:
      name: institution
      in: query
      description: Return results only for this institution (use the Belvo-designated name, such as `erebor_mx_retail`).
      schema:
        type: string
        example: erebor_mx_retail
    holder__type:
      name: holder__type
      required: false
      in: query
      description: Return results for a matched value type.
      schema:
        example: INDIVIDUAL
        type: string
    holder__type__in:
      name: holder__type__in
      required: false
      in: query
      description: Return results for listed holder types.
      schema:
        example: INDIVIDUAL,BUSINESS
        type: string
    providers:
      name: providers
      required: false
      in: query
      description: Return results only for this value.
      schema:
        example: payments_way
        type: string
    status_payment-links:
      name: status
      required: false
      in: query
      description: Return payment links with this status. Can be either `ACTIVE` or `INACTIVE`.
      schema:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
        example: ACTIVE
    ordering__payment-links:
      name: ordering
      required: false
      in: query
      description: |
        Return results in a specified time order.

        Can be either:
          - `created_at`: returns payment links from newest to oldest (in ascending order).
          - `-created_at`: returns payment links from oldest to newest (in descending order).
      schema:
        enum:
          - created_at
          - '-created_at'
        example: '-created_at'
        type: string
    amount:
      name: amount
      required: false
      in: query
      description: Return results only for this value.
      schema:
        type: number
        example: 1000
    amount__gt:
      name: amount__gt
      required: false
      in: query
      description: Return results only for more than this amount.
      schema:
        type: number
        example: 1000
    amount__gte:
      name: amount__gte
      required: false
      in: query
      description: Return results only for and more than this amount.
      schema:
        type: number
        example: 1000
    amount__lt:
      name: amount__lt
      required: false
      in: query
      description: Return results only for less than this amount.
      schema:
        type: number
        example: 1000
    amount__lte:
      name: amount__lte
      required: false
      in: query
      description: Return results only for this amount or less.
      schema:
        type: number
        example: 1000
    amount__range:
      name: amount__range
      required: false
      in: query
      description: Return results between this amount range.
      style: form
      explode: false
      schema:
        type: array
        maxItems: 2
        items:
          type: number
          example: 2000
        example: 1001.00,2000.00
    customer__in:
      name: customer__in
      required: false
      in: query
      description: One or more `customer.id`s that you want to get results for.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: cb320adc-9a6b-4224-933a-5b08cf771ac7
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264
    ordering__payment-intents:
      name: ordering
      required: false
      in: query
      description: |
        Return results in a specified time order.

        Can be either:
          - `updated_at`: returns payment intents from most recently updated to last (in ascending order).
          - `-updated_at`: returns payment intents from last updated to most recently updated (in descending order).
      schema:
        enum:
          - updated_at
          - '-updated_at'
        example: updated_at
        type: string
    provider:
      name: provider
      required: false
      in: query
      description: Return results only for this value.
      schema:
        example: payments_way
        type: string
    payment_method_type:
      name: payment_method_type
      required: false
      in: query
      description: Return results only for this value.
      schema:
        example: pse
        type: string
    status_payment-intents:
      name: status
      required: false
      in: query
      description: Return results only for this value.
      schema:
        type: string
        example: SUCCEEDED
    status__in_payment-intents:
      name: status__in
      in: query
      required: false
      description: Return payment intents one of these statuses.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          example: PROCESSING
        example: PROCESSING,SUCCEEDED
    updated_at:
      name: updated_at
      in: query
      description: Return items that were last updated in Belvo's database on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-05'
    updated_at__gt:
      name: updated_at__gt
      in: query
      description: Return items that were last updated in Belvo's database after this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-05'
    updated_at__gte:
      name: updated_at__gte
      in: query
      description: Return items that were last updated in Belvo's database after or on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-05-04'
    updated_at__lt:
      name: updated_at__lt
      in: query
      description: Return items that were last updated in Belvo's database before this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-04-01'
    updated_at__lte:
      name: updated_at__lte
      in: query
      description: Return items that were last updated in Belvo's database before or on this date (in `YYYY-MM-DD` format).
      schema:
        type: string
        format: date
        example: '2022-03-30'
    updated_at__range:
      name: updated_at__range
      in: query
      description: Return accounts that were last updated in Belvo's database between two dates (in `YYYY-MM-DD` format).
      style: form
      explode: false
      schema:
        type: array
        maxItems: 2
        items:
          type: string
          format: date
          example: '2022-03-03'
        example: 2022-03-03,2022-05-04
    charge:
      name: charge
      required: false
      in: query
      description: The `charge.id` you want to get results for.
      schema:
        type: string
        format: uuid
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d
    charge__in:
      name: charge__in
      required: false
      in: query
      description: One or more `charge.id`s that you want to get results for.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: 2f122ae2-fc09-4c6d-9940-b6220e8d191d
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264
    beneficiary:
      name: beneficiary
      required: false
      in: query
      description: The `beneficiary.id` you want to get results for.
      schema:
        type: string
        format: uuid
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d
    beneficiary__in:
      name: beneficiary__in
      required: false
      in: query
      description: One or more `beneficiary.id`s that you want to get results for.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: ee43f030-4feb-4a06-95e7-d8d8afe5b16e
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264
    payer:
      name: payer
      required: false
      in: query
      description: The payer's `bank-account.id` you want to get results for.
      schema:
        type: string
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d
    payer__in:
      name: payer__in
      required: false
      in: query
      description: One or more payer `bank-account.id`s that you want to get results for.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: 901bc024-be57-4972-b4cf-31664b369d6e
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264
    payment_intent:
      name: payment_intent
      required: false
      in: query
      description: The `payment-intent.id` you want to get results for.
      schema:
        type: string
        format: uuid
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d
    payment_intent__in:
      name: payment_intent__in
      required: false
      in: query
      description: One or more `payment-intent.id`s that you want to get results for.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: cb320adc-9a6b-4224-933a-5b08cf771ac7
        example: 24e5b3a5-19aa-40fe-91e5-4db7f22ecc2d,bfe57b64-f033-4a00-97f8-83ec88440264
    transaction__type:
      name: transaction__type
      required: false
      in: query
      description: Return results for a matched value type.
      schema:
        example: INFLOW
        type: string
    currency:
      name: currency
      in: query
      description: Return results that hold finances or balances in only this three-letter currency code.
      schema:
        type: string
        example: COP
    description:
      name: description
      required: false
      in: query
      description: Return results for a matched value type.
      schema:
        example: Training shoes
        type: string
  examples:
    ResponseCustomerOfpiIndividualPaginated:
      summary: OFPI Individual
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: INDIVIDUAL
            name: Caetano Veloso
            country: BRA
            email: caetano.veloso@musicabrazil.br
            identifier: 23******00
            identifier_type: CPF
            address: Rua de Caetano Veloso 432, 70200 Brasilia
            phone: 3210-9876
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: INDIVIDUAL
            name: Caetano Veloso
            country: BRA
            email: caetano.veloso@musicabrazil.br
            identifier: 23******00
            identifier_type: CPF
            address: Rua de Caetano Veloso 432, 70200 Brasilia
            phone: 3210-9876
    ResponseCustomerOfpiBusinessPaginated:
      summary: OFPI Business
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: BUSINESS
            name: Music Production Brazil
            country: BRA
            email: finance@musicabrazil.br
            identifier: 00.000.000/0001-91
            identifier_type: CNPJ
            address: Rua de Caetano Veloso 432, 70200 Brasilia
            phone: 3210-9876
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: BUSINESS
            name: Music Production Brazil
            country: BRA
            email: finance@musicabrazil.br
            identifier: 00.000.000/0001-91
            identifier_type: CNPJ
            address: Rua de Caetano Veloso 432, 70200 Brasilia
            phone: 3210-9876
    ResponseCustomerPseIndividualPaginated:
      summary: PSE Individual
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: INDIVIDUAL
            name: Carlos Vives
            country: COL
            email: carlos.vives@musicacolombia.co
            identifier: '1018760936'
            identifier_type: CC
            address: Calle Carlos Vives 432, 80300 Bogota
            phone: 3210-9876
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2022-02-09T08:45:50.406032Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            customer_type: INDIVIDUAL
            name: Carlos Vives
            country: COL
            email: carlos.vives@musicacolombia.co
            identifier: '1018760936'
            identifier_type: CC
            address: Calle Carlos Vives 432, 80300 Bogota
            phone: 3210-9876
    CreateCustomerOfpiIndividual:
      summary: OFPI Individual
      value:
        customer_type: INDIVIDUAL
        name: Caetano Veloso
        country: BRA
        email: caetano.veloso@musicabrazil.br
        identifier: 231.002.999-00
        identifier_type: CPF
    CreateCustomerOfpiBusiness:
      summary: OFPI Business
      value:
        customer_type: BUSINESS
        name: Music Production Brazil
        country: BRA
        email: finance@musicabrazil.br
        identifier: 00.000.000/0001-91
        identifier_type: CNPJ
    CreateCustomerPseIndividual:
      summary: PSE Individual
      value:
        customer_type: INDIVIDUAL
        name: Carlos Vives
        country: COL
        email: carlos.vives@musicacolombia.co
        identifier: '1018760936'
        identifier_type: CC
        address: Calle Carlos Vives 432, 80300 Bogota
        phone: 3210-9876
    ResponseCustomerOfpiIndividual:
      summary: OFPI Individual
      value:
        id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
        created_at: '2022-02-09T08:45:50.406032Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        customer_type: INDIVIDUAL
        name: Caetano Veloso
        country: BRA
        email: caetano.veloso@musicabrazil.br
        identifier: 23******00
        identifier_type: CPF
        address: Rua de Caetano Veloso 432, 70200 Brasilia
        phone: 3210-9876
    ResponseCustomerOfpiBusiness:
      summary: OFPI Business
      value:
        id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
        created_at: '2022-02-09T08:45:50.406032Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        customer_type: BUSINESS
        name: Music Production Brazil
        country: BRA
        email: finance@musicabrazil.br
        identifier: 00.000.000/0001-91
        identifier_type: CNPJ
        address: Rua de Caetano Veloso 432, 70200 Brasilia
        phone: 3210-9876
    ResponseCustomerPseIndividual:
      summary: PSE Individual
      value:
        id: 0110c70a-5faf-4d72-94b6-307473e86af7
        created_at: '2022-02-09T08:45:50.406032Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        customer_type: INDIVIDUAL
        name: Carlos Vives
        country: COL
        email: carlos.vives@musicacolombia.co
        identifier: '1018760936'
        identifier_type: CC
        address: Calle Carlos Vives 432, 80300 Bogota
        phone: 3210-9876
    ResponseBankAccountBusinessPixInfoPaginated:
      summary: Business bank account (OFPI)
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 90d90e38-0087-4b6d-b6dc-94ea561bb9cb
            created_at: '2023-02-15T07:52:31.998761Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            institution: f512d996-583a-4a91-8b5b-eba2e103b068
            customer: null
            holder:
              type: BUSINESS
              information:
                name: Music Production Brazil
                identifier_type: CNPJ
                identifier: '00000000000191'
            details:
              country: BRA
              account_type: CHECKINGS
              agency: '0444'
              number: 45722-0
    ResponseBankAccountIndividualPixInfoPaginated:
      summary: Individual bank account (OFPI)
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 90d90e38-0087-4b6d-b6dc-94ea561bb9cb
            created_at: '2023-02-15T07:52:31.998761Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            institution: f512d996-583a-4a91-8b5b-eba2e103b068
            customer: 49f244ef-06cd-49cf-ad0c-f43796e370ad
            holder:
              type: INDIVIDUAL
              information:
                first_name: Caetano
                last_name: Veloso
                identifier_type: CPF
                identifier: 23******00
            details:
              country: BRA
              account_type: CHECKINGS
              agency: '0444'
              number: 45722-0
    ResponseBankAccountBusinessPsePaginated:
      summary: Business bank account (PSE)
      value:
        count: 110
        next: https://api.belvo.com/payments/{endpoint}/?page=2
        previous: null
        results:
          - id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
            created_at: '2023-02-15T07:52:31.998761Z'
            created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
            holder:
              type: BUSINESS
              information:
                name: Tr******es
            providers:
              payments_way:
                terminal_id: 123
                form_id: 321
            metadata:
              internal_reference_id: GGq73487w2
            details: {}
            institution: null
            customer: null
            number: '******5633'
    CreateBankAccountBusinessPixInfo:
      summary: Business bank account (OFPI)
      value:
        institution: f512d996-583a-4a91-8b5b-eba2e103b068
        holder:
          type: BUSINESS
          information:
            name: Music Production Brazil
            identifier_type: CNPJ
            identifier: '00000000000191'
        details:
          country: BRA
          account_type: CHECKINGS
          agency: '0444'
          number: 45722-0
    CreateBankAccountIndividualPixInfo:
      summary: Individual bank account (OFPI)
      value:
        institution: f512d996-583a-4a91-8b5b-eba2e103b068
        holder:
          type: INDIVIDUAL
          information:
            first_name: Caetano
            last_name: Veloso
            identifier_type: CPF
            identifier: '00000000000191'
        details:
          country: BRA
          account_type: CHECKINGS
          agency: '0111'
          number: 12344-0
    CreateBankAccountBusinessPse:
      summary: Business bank account (PSE)
      value:
        holder:
          type: BUSINESS
          information:
            name: Trusty documentation services
        providers:
          payments_way:
            terminal_id: 123
            form_id: 321
        number: '12343453245633'
        metadata:
          internal_reference_id: GGq73487w2
    ResponseBankAccountBusinessPixInfo:
      summary: Business bank account (OFPI)
      value:
        id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
        created_at: '2023-02-15T07:52:31.998761Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        institution: f512d996-583a-4a91-8b5b-eba2e103b068
        customer: null
        holder:
          type: BUSINESS
          information:
            name: Music Production Brazil
            identifier_type: CNPJ
            identifier: '00000000000191'
        details:
          country: BRA
          account_type: CHECKINGS
          agency: '0444'
          number: 45722-0
    ResponseBankAccountIndividualPixInfo:
      summary: Individual bank account (OFPI)
      value:
        id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
        created_at: '2023-02-15T07:52:31.998761Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        institution: f512d996-583a-4a91-8b5b-eba2e103b068
        customer: 49f244ef-06cd-49cf-ad0c-f43796e370ad
        holder:
          type: INDIVIDUAL
          information:
            first_name: Caetano
            last_name: Veloso
            identifier_type: CPF
            identifier: 23******00
        details:
          country: BRA
          account_type: CHECKINGS
          agency: '0444'
          number: 45722-0
    ResponseBankAccountBusinessPse:
      summary: Business bank account (PSE)
      value:
        id: 7c2be016-37e3-44e2-8643-db2eb1129a3f
        created_at: '2023-02-15T07:52:31.998761Z'
        created_by: 417514fe-50f6-42e9-a3eb-c71da00f014c
        holder:
          type: BUSINESS
          information:
            name: Tr******es
        providers:
          payments_way:
            terminal_id: 123
            form_id: 321
        metadata:
          internal_reference_id: GGq73487w2
        details: {}
        institution: null
        customer: null
        number: '******5633'
